

Microchip MPLAB XC8 Assembler V2.35 build 20211206165544 
                                                                                               Sat Apr  9 20:56:32 2022

Microchip MPLAB XC8 C Compiler v2.35 (Free license) build 20211206165544 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	intentry,global,class=CODE,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    17                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    18                           	dabs	1,0x7E,2
    19  0000                     
    20                           ; Version 2.40
    21                           ; Generated 17/11/2021 GMT
    22                           ; 
    23                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution. Publication is not required when
    37                           ;        this file is used in an embedded application.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC16F887 Definitions
    53                           ; 
    54                           ; SFR Addresses
    55  0000                     	;# 
    56  0001                     	;# 
    57  0002                     	;# 
    58  0003                     	;# 
    59  0004                     	;# 
    60  0005                     	;# 
    61  0006                     	;# 
    62  0007                     	;# 
    63  0008                     	;# 
    64  0009                     	;# 
    65  000A                     	;# 
    66  000B                     	;# 
    67  000C                     	;# 
    68  000D                     	;# 
    69  000E                     	;# 
    70  000E                     	;# 
    71  000F                     	;# 
    72  0010                     	;# 
    73  0011                     	;# 
    74  0012                     	;# 
    75  0013                     	;# 
    76  0014                     	;# 
    77  0015                     	;# 
    78  0015                     	;# 
    79  0016                     	;# 
    80  0017                     	;# 
    81  0018                     	;# 
    82  0019                     	;# 
    83  001A                     	;# 
    84  001B                     	;# 
    85  001B                     	;# 
    86  001C                     	;# 
    87  001D                     	;# 
    88  001E                     	;# 
    89  001F                     	;# 
    90  0081                     	;# 
    91  0085                     	;# 
    92  0086                     	;# 
    93  0087                     	;# 
    94  0088                     	;# 
    95  0089                     	;# 
    96  008C                     	;# 
    97  008D                     	;# 
    98  008E                     	;# 
    99  008F                     	;# 
   100  0090                     	;# 
   101  0091                     	;# 
   102  0092                     	;# 
   103  0093                     	;# 
   104  0093                     	;# 
   105  0093                     	;# 
   106  0094                     	;# 
   107  0095                     	;# 
   108  0096                     	;# 
   109  0097                     	;# 
   110  0098                     	;# 
   111  0099                     	;# 
   112  009A                     	;# 
   113  009B                     	;# 
   114  009C                     	;# 
   115  009D                     	;# 
   116  009E                     	;# 
   117  009F                     	;# 
   118  0105                     	;# 
   119  0107                     	;# 
   120  0108                     	;# 
   121  0109                     	;# 
   122  010C                     	;# 
   123  010C                     	;# 
   124  010D                     	;# 
   125  010E                     	;# 
   126  010F                     	;# 
   127  0185                     	;# 
   128  0187                     	;# 
   129  0188                     	;# 
   130  0189                     	;# 
   131  018C                     	;# 
   132  018D                     	;# 
   133  0000                     	;# 
   134  0001                     	;# 
   135  0002                     	;# 
   136  0003                     	;# 
   137  0004                     	;# 
   138  0005                     	;# 
   139  0006                     	;# 
   140  0007                     	;# 
   141  0008                     	;# 
   142  0009                     	;# 
   143  000A                     	;# 
   144  000B                     	;# 
   145  000C                     	;# 
   146  000D                     	;# 
   147  000E                     	;# 
   148  000E                     	;# 
   149  000F                     	;# 
   150  0010                     	;# 
   151  0011                     	;# 
   152  0012                     	;# 
   153  0013                     	;# 
   154  0014                     	;# 
   155  0015                     	;# 
   156  0015                     	;# 
   157  0016                     	;# 
   158  0017                     	;# 
   159  0018                     	;# 
   160  0019                     	;# 
   161  001A                     	;# 
   162  001B                     	;# 
   163  001B                     	;# 
   164  001C                     	;# 
   165  001D                     	;# 
   166  001E                     	;# 
   167  001F                     	;# 
   168  0081                     	;# 
   169  0085                     	;# 
   170  0086                     	;# 
   171  0087                     	;# 
   172  0088                     	;# 
   173  0089                     	;# 
   174  008C                     	;# 
   175  008D                     	;# 
   176  008E                     	;# 
   177  008F                     	;# 
   178  0090                     	;# 
   179  0091                     	;# 
   180  0092                     	;# 
   181  0093                     	;# 
   182  0093                     	;# 
   183  0093                     	;# 
   184  0094                     	;# 
   185  0095                     	;# 
   186  0096                     	;# 
   187  0097                     	;# 
   188  0098                     	;# 
   189  0099                     	;# 
   190  009A                     	;# 
   191  009B                     	;# 
   192  009C                     	;# 
   193  009D                     	;# 
   194  009E                     	;# 
   195  009F                     	;# 
   196  0105                     	;# 
   197  0107                     	;# 
   198  0108                     	;# 
   199  0109                     	;# 
   200  010C                     	;# 
   201  010C                     	;# 
   202  010D                     	;# 
   203  010E                     	;# 
   204  010F                     	;# 
   205  0185                     	;# 
   206  0187                     	;# 
   207  0188                     	;# 
   208  0189                     	;# 
   209  018C                     	;# 
   210  018D                     	;# 
   211  0001                     _TMR0	set	1
   212  0008                     _PORTD	set	8
   213  0007                     _PORTC	set	7
   214  0006                     _PORTB	set	6
   215  0005                     _PORTA	set	5
   216  0006                     _PORTBbits	set	6
   217  000B                     _INTCONbits	set	11
   218  0096                     _IOCBbits	set	150
   219  0095                     _WPUBbits	set	149
   220  0081                     _OPTION_REGbits	set	129
   221  0088                     _TRISD	set	136
   222  0087                     _TRISC	set	135
   223  0085                     _TRISA	set	133
   224  0086                     _TRISBbits	set	134
   225  008F                     _OSCCONbits	set	143
   226  0189                     _ANSELH	set	393
   227  0188                     _ANSEL	set	392
   228                           
   229                           	psect	cinit
   230  0013                     start_initialization:	
   231                           ; #config settings
   232                           
   233  0013                     __initialization:
   234                           
   235                           ; Clear objects allocated to COMMON
   236  0013  01F7               	clrf	__pbssCOMMON& (0+127)
   237  0014  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
   238  0015  01F9               	clrf	(__pbssCOMMON+2)& (0+127)
   239  0016  01FA               	clrf	(__pbssCOMMON+3)& (0+127)
   240                           
   241                           ; Clear objects allocated to BANK0
   242  0017  1283               	bcf	3,5	;RP0=0, select bank0
   243  0018  1303               	bcf	3,6	;RP1=0, select bank0
   244  0019  01A0               	clrf	__pbssBANK0& (0+127)
   245  001A  01A1               	clrf	(__pbssBANK0+1)& (0+127)
   246  001B  01A2               	clrf	(__pbssBANK0+2)& (0+127)
   247  001C  01A3               	clrf	(__pbssBANK0+3)& (0+127)
   248  001D  01A4               	clrf	(__pbssBANK0+4)& (0+127)
   249  001E  01A5               	clrf	(__pbssBANK0+5)& (0+127)
   250  001F  01A6               	clrf	(__pbssBANK0+6)& (0+127)
   251  0020  01A7               	clrf	(__pbssBANK0+7)& (0+127)
   252  0021  01A8               	clrf	(__pbssBANK0+8)& (0+127)
   253  0022  01A9               	clrf	(__pbssBANK0+9)& (0+127)
   254  0023  01AA               	clrf	(__pbssBANK0+10)& (0+127)
   255  0024  01AB               	clrf	(__pbssBANK0+11)& (0+127)
   256  0025                     end_of_initialization:	
   257                           ;End of C runtime variable initialization code
   258                           
   259  0025                     __end_of__initialization:
   260  0025  0183               	clrf	3
   261  0026  120A  118A  29C5   	ljmp	_main	;jump to C main() function
   262                           
   263                           	psect	bssCOMMON
   264  0077                     __pbssCOMMON:
   265  0077                     _counter_temp:
   266  0077                     	ds	2
   267  0079                     _selector:
   268  0079                     	ds	2
   269                           
   270                           	psect	bssBANK0
   271  0020                     __pbssBANK0:
   272  0020                     _display_values:
   273  0020                     	ds	6
   274  0026                     _decimal_counter:
   275  0026                     	ds	6
   276                           
   277                           	psect	cstackCOMMON
   278  0070                     __pcstackCOMMON:
   279  0070                     ?_reset_TMR0:
   280  0070                     ??_reset_TMR0:	
   281                           ; 1 bytes @ 0x0
   282                           
   283  0070                     ?_select_display:	
   284                           ; 1 bytes @ 0x0
   285                           
   286  0070                     ??_select_display:	
   287                           ; 1 bytes @ 0x0
   288                           
   289  0070                     ?_display_table:	
   290                           ; 1 bytes @ 0x0
   291                           
   292  0070                     ?_setup:	
   293                           ; 1 bytes @ 0x0
   294                           
   295  0070                     ?_isr:	
   296                           ; 1 bytes @ 0x0
   297                           
   298  0070                     ?_main:	
   299                           ; 1 bytes @ 0x0
   300                           
   301  0070                     display_table@decimal_value:	
   302                           ; 1 bytes @ 0x0
   303                           
   304                           
   305                           ; 2 bytes @ 0x0
   306  0070                     	ds	2
   307  0072                     ??_display_table:
   308  0072                     ??_isr:	
   309                           ; 1 bytes @ 0x2
   310                           
   311                           
   312                           ; 1 bytes @ 0x2
   313  0072                     	ds	5
   314                           
   315                           	psect	cstackBANK0
   316  0000                     __pcstackBANK0:
   317  0000                     ??_setup:
   318  0000                     ??_main:	
   319                           ; 1 bytes @ 0x0
   320                           
   321                           
   322                           	psect	maintext
   323  01C5                     __pmaintext:	
   324                           ; 1 bytes @ 0x0
   325 ;;
   326 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   327 ;;
   328 ;; *************** function _main *****************
   329 ;; Defined at:
   330 ;;		line 151 in file "main.c"
   331 ;; Parameters:    Size  Location     Type
   332 ;;		None
   333 ;; Auto vars:     Size  Location     Type
   334 ;;		None
   335 ;; Return value:  Size  Location     Type
   336 ;;                  1    wreg      void 
   337 ;; Registers used:
   338 ;;		wreg, status,2, status,0, pclath, cstack
   339 ;; Tracked objects:
   340 ;;		On entry : B00/0
   341 ;;		On exit  : 0/0
   342 ;;		Unchanged: 0/0
   343 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   344 ;;      Params:         0       0       0       0       0
   345 ;;      Locals:         0       0       0       0       0
   346 ;;      Temps:          0       0       0       0       0
   347 ;;      Totals:         0       0       0       0       0
   348 ;;Total ram usage:        0 bytes
   349 ;; Hardware stack levels required when called: 3
   350 ;; This function calls:
   351 ;;		_setup
   352 ;; This function is called by:
   353 ;;		Startup code after reset
   354 ;; This function uses a non-reentrant model
   355 ;;
   356                           
   357  01C5                     _main:	
   358                           ;psect for function _main
   359                           
   360  01C5                     l1142:	
   361                           ;incstack = 0
   362                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   363                           
   364                           
   365                           ;main.c: 153:     setup();
   366  01C5  120A  118A  21A0  120A  118A  	fcall	_setup
   367  01CA                     l79:	
   368                           ;main.c: 156:     while (1) {}
   369                           
   370  01CA                     l80:
   371  01CA  29CA               	goto	l79
   372  01CB  120A  118A  2810   	ljmp	start
   373  01CE                     __end_of_main:
   374                           
   375                           	psect	text1
   376  01A0                     __ptext1:	
   377 ;; *************** function _setup *****************
   378 ;; Defined at:
   379 ;;		line 164 in file "main.c"
   380 ;; Parameters:    Size  Location     Type
   381 ;;		None
   382 ;; Auto vars:     Size  Location     Type
   383 ;;		None
   384 ;; Return value:  Size  Location     Type
   385 ;;                  1    wreg      void 
   386 ;; Registers used:
   387 ;;		wreg, status,2, status,0
   388 ;; Tracked objects:
   389 ;;		On entry : 0/0
   390 ;;		On exit  : 0/0
   391 ;;		Unchanged: 0/0
   392 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   393 ;;      Params:         0       0       0       0       0
   394 ;;      Locals:         0       0       0       0       0
   395 ;;      Temps:          0       0       0       0       0
   396 ;;      Totals:         0       0       0       0       0
   397 ;;Total ram usage:        0 bytes
   398 ;; Hardware stack levels used: 1
   399 ;; Hardware stack levels required when called: 2
   400 ;; This function calls:
   401 ;;		Nothing
   402 ;; This function is called by:
   403 ;;		_main
   404 ;; This function uses a non-reentrant model
   405 ;;
   406                           
   407  01A0                     _setup:	
   408                           ;psect for function _setup
   409                           
   410  01A0                     l1084:	
   411                           ;incstack = 0
   412                           ; Regs used in _setup: [wreg+status,2+status,0]
   413                           
   414                           
   415                           ;main.c: 167:     ANSEL = 0;
   416  01A0  1683               	bsf	3,5	;RP0=1, select bank3
   417  01A1  1703               	bsf	3,6	;RP1=1, select bank3
   418  01A2  0188               	clrf	8	;volatile
   419                           
   420                           ;main.c: 168:     ANSELH = 0;
   421  01A3  0189               	clrf	9	;volatile
   422  01A4                     l1086:
   423                           
   424                           ;main.c: 171:     OSCCONbits.IRCF = 0b0111;
   425  01A4  3070               	movlw	112
   426  01A5  1683               	bsf	3,5	;RP0=1, select bank1
   427  01A6  1303               	bcf	3,6	;RP1=0, select bank1
   428  01A7  048F               	iorwf	15,f	;volatile
   429  01A8                     l1088:
   430                           
   431                           ;main.c: 172:     OSCCONbits.SCS = 1;
   432  01A8  140F               	bsf	15,0	;volatile
   433  01A9                     l1090:
   434                           
   435                           ;main.c: 175:     TRISBbits.TRISB0 = 1;
   436  01A9  1406               	bsf	6,0	;volatile
   437  01AA                     l1092:
   438                           
   439                           ;main.c: 176:     TRISBbits.TRISB1 = 1;
   440  01AA  1486               	bsf	6,1	;volatile
   441  01AB                     l1094:
   442                           
   443                           ;main.c: 179:     TRISA = 0;
   444  01AB  0185               	clrf	5	;volatile
   445  01AC                     l1096:
   446                           
   447                           ;main.c: 180:     TRISC = 0;
   448  01AC  0187               	clrf	7	;volatile
   449  01AD                     l1098:
   450                           
   451                           ;main.c: 181:     TRISD = 0;
   452  01AD  0188               	clrf	8	;volatile
   453  01AE                     l1100:
   454                           
   455                           ;main.c: 184:     OPTION_REGbits.nRBPU = 0;
   456  01AE  1381               	bcf	1,7	;volatile
   457  01AF                     l1102:
   458                           
   459                           ;main.c: 185:     WPUBbits.WPUB0 = 1;
   460  01AF  1415               	bsf	21,0	;volatile
   461  01B0                     l1104:
   462                           
   463                           ;main.c: 186:     WPUBbits.WPUB1 = 1;
   464  01B0  1495               	bsf	21,1	;volatile
   465  01B1                     l1106:
   466                           
   467                           ;main.c: 189:     INTCONbits.GIE = 1;
   468  01B1  178B               	bsf	11,7	;volatile
   469  01B2                     l1108:
   470                           
   471                           ;main.c: 192:     INTCONbits.RBIE = 1;
   472  01B2  158B               	bsf	11,3	;volatile
   473  01B3                     l1110:
   474                           
   475                           ;main.c: 193:     IOCBbits.IOCB0 = 1;
   476  01B3  1416               	bsf	22,0	;volatile
   477  01B4                     l1112:
   478                           
   479                           ;main.c: 194:     IOCBbits.IOCB1 = 1;
   480  01B4  1496               	bsf	22,1	;volatile
   481  01B5                     l1114:
   482                           
   483                           ;main.c: 195:     INTCONbits.RBIF = 0;
   484  01B5  100B               	bcf	11,0	;volatile
   485  01B6                     l1116:
   486                           
   487                           ;main.c: 196:     INTCONbits.PEIE = 1;
   488  01B6  170B               	bsf	11,6	;volatile
   489  01B7                     l1118:
   490                           
   491                           ;main.c: 199:     INTCONbits.T0IF = 0;
   492  01B7  110B               	bcf	11,2	;volatile
   493  01B8                     l1120:
   494                           
   495                           ;main.c: 200:     INTCONbits.T0IE = 1;
   496  01B8  168B               	bsf	11,5	;volatile
   497  01B9                     l1122:
   498                           
   499                           ;main.c: 201:     OPTION_REGbits.T0CS = 0;
   500  01B9  1281               	bcf	1,5	;volatile
   501  01BA                     l1124:
   502                           
   503                           ;main.c: 202:     OPTION_REGbits.PSA = 0;
   504  01BA  1181               	bcf	1,3	;volatile
   505  01BB                     l1126:
   506                           
   507                           ;main.c: 203:     OPTION_REGbits.PS2 = 1;
   508  01BB  1501               	bsf	1,2	;volatile
   509  01BC                     l1128:
   510                           
   511                           ;main.c: 204:     OPTION_REGbits.PS1 = 1;
   512  01BC  1481               	bsf	1,1	;volatile
   513  01BD                     l1130:
   514                           
   515                           ;main.c: 205:     OPTION_REGbits.PS0 = 1;
   516  01BD  1401               	bsf	1,0	;volatile
   517  01BE                     l1132:
   518                           
   519                           ;main.c: 208:     PORTA = 0;
   520  01BE  1283               	bcf	3,5	;RP0=0, select bank0
   521  01BF  1303               	bcf	3,6	;RP1=0, select bank0
   522  01C0  0185               	clrf	5	;volatile
   523  01C1                     l1134:
   524                           
   525                           ;main.c: 209:     PORTB = 0;
   526  01C1  0186               	clrf	6	;volatile
   527  01C2                     l1136:
   528                           
   529                           ;main.c: 210:     PORTC = 0;
   530  01C2  0187               	clrf	7	;volatile
   531  01C3                     l1138:
   532                           
   533                           ;main.c: 211:     PORTD = 0;
   534  01C3  0188               	clrf	8	;volatile
   535  01C4                     l85:
   536  01C4  0008               	return
   537  01C5                     __end_of_setup:
   538                           
   539                           	psect	text2
   540  0029                     __ptext2:	
   541 ;; *************** function _isr *****************
   542 ;; Defined at:
   543 ;;		line 65 in file "main.c"
   544 ;; Parameters:    Size  Location     Type
   545 ;;		None
   546 ;; Auto vars:     Size  Location     Type
   547 ;;		None
   548 ;; Return value:  Size  Location     Type
   549 ;;                  1    wreg      void 
   550 ;; Registers used:
   551 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   552 ;; Tracked objects:
   553 ;;		On entry : 0/0
   554 ;;		On exit  : 0/0
   555 ;;		Unchanged: 0/0
   556 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   557 ;;      Params:         0       0       0       0       0
   558 ;;      Locals:         0       0       0       0       0
   559 ;;      Temps:          5       0       0       0       0
   560 ;;      Totals:         5       0       0       0       0
   561 ;;Total ram usage:        5 bytes
   562 ;; Hardware stack levels used: 1
   563 ;; Hardware stack levels required when called: 1
   564 ;; This function calls:
   565 ;;		_display_table
   566 ;;		_reset_TMR0
   567 ;;		_select_display
   568 ;; This function is called by:
   569 ;;		Interrupt level 1
   570 ;; This function uses a non-reentrant model
   571 ;;
   572                           
   573  0029                     _isr:	
   574                           ;psect for function _isr
   575                           
   576  0029                     i1l980:
   577                           
   578                           ;main.c: 69:     if (INTCONbits.RBIF)
   579  0029  1C0B               	btfss	11,0	;volatile
   580  002A  282C               	goto	u16_21
   581  002B  282D               	goto	u16_20
   582  002C                     u16_21:
   583  002C  284B               	goto	i1l994
   584  002D                     u16_20:
   585  002D                     i1l982:
   586                           
   587                           ;main.c: 70:     {;main.c: 71:         if (!PORTBbits.RB0)
   588  002D  1283               	bcf	3,5	;RP0=0, select bank0
   589  002E  1303               	bcf	3,6	;RP1=0, select bank0
   590  002F  1806               	btfsc	6,0	;volatile
   591  0030  2832               	goto	u17_21
   592  0031  2833               	goto	u17_20
   593  0032                     u17_21:
   594  0032  283E               	goto	i1l56
   595  0033                     u17_20:
   596  0033                     i1l984:
   597                           
   598                           ;main.c: 72:         {;main.c: 73:             decimal_counter[0]++;
   599  0033  3001               	movlw	1
   600  0034  07A6               	addwf	_decimal_counter,f
   601  0035  1803               	skipnc
   602  0036  0AA7               	incf	_decimal_counter+1,f
   603  0037  3000               	movlw	0
   604  0038  07A7               	addwf	_decimal_counter+1,f
   605  0039                     i1l986:
   606                           
   607                           ;main.c: 74:             PORTA++;
   608  0039  3001               	movlw	1
   609  003A  00F2               	movwf	??_isr
   610  003B  0872               	movf	??_isr,w
   611  003C  0785               	addwf	5,f	;volatile
   612                           
   613                           ;main.c: 75:         }
   614  003D  284A               	goto	i1l992
   615  003E                     i1l56:	
   616                           ;main.c: 77:         else if (!PORTBbits.RB1)
   617                           
   618  003E  1886               	btfsc	6,1	;volatile
   619  003F  2841               	goto	u18_21
   620  0040  2842               	goto	u18_20
   621  0041                     u18_21:
   622  0041  284A               	goto	i1l992
   623  0042                     u18_20:
   624  0042                     i1l988:
   625                           
   626                           ;main.c: 78:         {;main.c: 79:             decimal_counter[0]--;
   627  0042  30FF               	movlw	255
   628  0043  07A6               	addwf	_decimal_counter,f
   629  0044  1803               	skipnc
   630  0045  0AA7               	incf	_decimal_counter+1,f
   631  0046  30FF               	movlw	255
   632  0047  07A7               	addwf	_decimal_counter+1,f
   633  0048                     i1l990:
   634                           
   635                           ;main.c: 80:             PORTA--;
   636  0048  3001               	movlw	1
   637  0049  0285               	subwf	5,f	;volatile
   638  004A                     i1l992:
   639                           
   640                           ;main.c: 83:         INTCONbits.RBIF = 0;
   641  004A  100B               	bcf	11,0	;volatile
   642  004B                     i1l994:
   643                           
   644                           ;main.c: 88:     if (INTCONbits.T0IF)
   645  004B  1D0B               	btfss	11,2	;volatile
   646  004C  284E               	goto	u19_21
   647  004D  284F               	goto	u19_20
   648  004E                     u19_21:
   649  004E  2906               	goto	i1l74
   650  004F                     u19_20:
   651  004F                     i1l996:
   652                           
   653                           ;main.c: 89:     {;main.c: 90:         reset_TMR0();
   654  004F  120A  118A  21CE  120A  118A  	fcall	_reset_TMR0
   655  0054                     i1l998:
   656                           
   657                           ;main.c: 91:         select_display();
   658  0054  120A  118A  216A  120A  118A  	fcall	_select_display
   659  0059                     i1l1000:
   660                           
   661                           ;main.c: 95:         if (decimal_counter[0] > 9)
   662  0059  1283               	bcf	3,5	;RP0=0, select bank0
   663  005A  1303               	bcf	3,6	;RP1=0, select bank0
   664  005B  0827               	movf	_decimal_counter+1,w
   665  005C  3A80               	xorlw	128
   666  005D  00FF               	movwf	btemp+1
   667  005E  3080               	movlw	128
   668  005F  027F               	subwf	btemp+1,w
   669  0060  1D03               	skipz
   670  0061  2864               	goto	u20_25
   671  0062  300A               	movlw	10
   672  0063  0226               	subwf	_decimal_counter,w
   673  0064                     u20_25:
   674  0064  1C03               	skipc
   675  0065  2867               	goto	u20_21
   676  0066  2868               	goto	u20_20
   677  0067                     u20_21:
   678  0067  2873               	goto	i1l1006
   679  0068                     u20_20:
   680  0068                     i1l1002:
   681                           
   682                           ;main.c: 96:         {;main.c: 97:             decimal_counter[0] = 0;
   683  0068  1283               	bcf	3,5	;RP0=0, select bank0
   684  0069  1303               	bcf	3,6	;RP1=0, select bank0
   685  006A  01A6               	clrf	_decimal_counter
   686  006B  01A7               	clrf	_decimal_counter+1
   687  006C                     i1l1004:
   688                           
   689                           ;main.c: 98:             decimal_counter[1]++;
   690  006C  3001               	movlw	1
   691  006D  07A8               	addwf	_decimal_counter+2,f
   692  006E  1803               	skipnc
   693  006F  0AA9               	incf	_decimal_counter+3,f
   694  0070  3000               	movlw	0
   695  0071  07A9               	addwf	_decimal_counter+3,f
   696                           
   697                           ;main.c: 99:         }
   698  0072  28A4               	goto	i1l1016
   699  0073                     i1l1006:
   700  0073  1283               	bcf	3,5	;RP0=0, select bank0
   701  0074  1303               	bcf	3,6	;RP1=0, select bank0
   702  0075  0829               	movf	_decimal_counter+3,w
   703  0076  3A80               	xorlw	128
   704  0077  00FF               	movwf	btemp+1
   705  0078  3080               	movlw	128
   706  0079  027F               	subwf	btemp+1,w
   707  007A  1D03               	skipz
   708  007B  287E               	goto	u21_25
   709  007C  300A               	movlw	10
   710  007D  0228               	subwf	_decimal_counter+2,w
   711  007E                     u21_25:
   712  007E  1C03               	skipc
   713  007F  2881               	goto	u21_21
   714  0080  2882               	goto	u21_20
   715  0081                     u21_21:
   716  0081  288D               	goto	i1l1012
   717  0082                     u21_20:
   718  0082                     i1l1008:
   719                           
   720                           ;main.c: 102:         {;main.c: 103:             decimal_counter[1] = 0;
   721  0082  1283               	bcf	3,5	;RP0=0, select bank0
   722  0083  1303               	bcf	3,6	;RP1=0, select bank0
   723  0084  01A8               	clrf	_decimal_counter+2
   724  0085  01A9               	clrf	_decimal_counter+3
   725  0086                     i1l1010:
   726                           
   727                           ;main.c: 104:             decimal_counter[2]++;
   728  0086  3001               	movlw	1
   729  0087  07AA               	addwf	_decimal_counter+4,f
   730  0088  1803               	skipnc
   731  0089  0AAB               	incf	_decimal_counter+5,f
   732  008A  3000               	movlw	0
   733  008B  07AB               	addwf	_decimal_counter+5,f
   734                           
   735                           ;main.c: 105:         }
   736  008C  28A4               	goto	i1l1016
   737  008D                     i1l1012:
   738  008D  1283               	bcf	3,5	;RP0=0, select bank0
   739  008E  1303               	bcf	3,6	;RP1=0, select bank0
   740  008F  082B               	movf	_decimal_counter+5,w
   741  0090  3A80               	xorlw	128
   742  0091  00FF               	movwf	btemp+1
   743  0092  3080               	movlw	128
   744  0093  027F               	subwf	btemp+1,w
   745  0094  1D03               	skipz
   746  0095  2898               	goto	u22_25
   747  0096  300A               	movlw	10
   748  0097  022A               	subwf	_decimal_counter+4,w
   749  0098                     u22_25:
   750  0098  1C03               	skipc
   751  0099  289B               	goto	u22_21
   752  009A  289C               	goto	u22_20
   753  009B                     u22_21:
   754  009B  28A4               	goto	i1l1016
   755  009C                     u22_20:
   756  009C                     i1l1014:
   757                           
   758                           ;main.c: 108:         {;main.c: 109:             decimal_counter[0] = 0;
   759  009C  1283               	bcf	3,5	;RP0=0, select bank0
   760  009D  1303               	bcf	3,6	;RP1=0, select bank0
   761  009E  01A6               	clrf	_decimal_counter
   762  009F  01A7               	clrf	_decimal_counter+1
   763                           
   764                           ;main.c: 110:             decimal_counter[1] = 0;
   765  00A0  01A8               	clrf	_decimal_counter+2
   766  00A1  01A9               	clrf	_decimal_counter+3
   767                           
   768                           ;main.c: 111:             decimal_counter[2] = 0;
   769  00A2  01AA               	clrf	_decimal_counter+4
   770  00A3  01AB               	clrf	_decimal_counter+5
   771  00A4                     i1l1016:
   772                           
   773                           ;main.c: 116:         if (decimal_counter[0] < 0)
   774  00A4  1283               	bcf	3,5	;RP0=0, select bank0
   775  00A5  1303               	bcf	3,6	;RP1=0, select bank0
   776  00A6  1FA7               	btfss	_decimal_counter+1,7
   777  00A7  28A9               	goto	u23_21
   778  00A8  28AA               	goto	u23_20
   779  00A9                     u23_21:
   780  00A9  28D4               	goto	i1l1028
   781  00AA                     u23_20:
   782  00AA                     i1l1018:
   783                           
   784                           ;main.c: 117:         {;main.c: 118:             decimal_counter[0] = 9;
   785  00AA  3009               	movlw	9
   786  00AB  00A6               	movwf	_decimal_counter
   787  00AC  3000               	movlw	0
   788  00AD  00A7               	movwf	_decimal_counter+1
   789                           
   790                           ;main.c: 119:             decimal_counter[1]--;
   791  00AE  30FF               	movlw	255
   792  00AF  07A8               	addwf	_decimal_counter+2,f
   793  00B0  1803               	skipnc
   794  00B1  0AA9               	incf	_decimal_counter+3,f
   795  00B2  30FF               	movlw	255
   796  00B3  07A9               	addwf	_decimal_counter+3,f
   797  00B4                     i1l1020:
   798                           
   799                           ;main.c: 121:             if (decimal_counter[1] < 0)
   800  00B4  3002               	movlw	2
   801  00B5  3E26               	addlw	(low (_decimal_counter| 0))& (0+255)
   802  00B6  0084               	movwf	4
   803  00B7  0A84               	incf	4,f
   804  00B8  1383               	bcf	3,7	;select IRP bank0
   805  00B9  1F80               	btfss	0,7
   806  00BA  28BC               	goto	u24_21
   807  00BB  28BD               	goto	u24_20
   808  00BC                     u24_21:
   809  00BC  28C8               	goto	i1l1024
   810  00BD                     u24_20:
   811  00BD                     i1l1022:
   812                           
   813                           ;main.c: 122:             {;main.c: 123:                 decimal_counter[1] = 9;
   814  00BD  3009               	movlw	9
   815  00BE  00A8               	movwf	_decimal_counter+2
   816  00BF  3000               	movlw	0
   817  00C0  00A9               	movwf	_decimal_counter+3
   818                           
   819                           ;main.c: 124:                 decimal_counter[2]--;
   820  00C1  30FF               	movlw	255
   821  00C2  07AA               	addwf	_decimal_counter+4,f
   822  00C3  1803               	skipnc
   823  00C4  0AAB               	incf	_decimal_counter+5,f
   824  00C5  30FF               	movlw	255
   825  00C6  07AB               	addwf	_decimal_counter+5,f
   826                           
   827                           ;main.c: 125:             }
   828  00C7  28D4               	goto	i1l1028
   829  00C8                     i1l1024:
   830  00C8  3004               	movlw	4
   831  00C9  3E26               	addlw	(low (_decimal_counter| 0))& (0+255)
   832  00CA  0084               	movwf	4
   833  00CB  0A84               	incf	4,f
   834  00CC  1F80               	btfss	0,7
   835  00CD  28CF               	goto	u25_21
   836  00CE  28D0               	goto	u25_20
   837  00CF                     u25_21:
   838  00CF  28D4               	goto	i1l1028
   839  00D0                     u25_20:
   840  00D0                     i1l1026:
   841                           
   842                           ;main.c: 128:                 decimal_counter[2] = 9;
   843  00D0  3009               	movlw	9
   844  00D1  00AA               	movwf	_decimal_counter+4
   845  00D2  3000               	movlw	0
   846  00D3  00AB               	movwf	_decimal_counter+5
   847  00D4                     i1l1028:
   848                           
   849                           ;main.c: 133:         if (selector == 1)
   850  00D4  0379               	decf	_selector,w
   851  00D5  047A               	iorwf	_selector+1,w
   852  00D6  1D03               	btfss	3,2
   853  00D7  28D9               	goto	u26_21
   854  00D8  28DA               	goto	u26_20
   855  00D9                     u26_21:
   856  00D9  28E4               	goto	i1l1032
   857  00DA                     u26_20:
   858  00DA                     i1l1030:
   859                           
   860                           ;main.c: 134:             display_table(decimal_counter[0]);
   861  00DA  0827               	movf	_decimal_counter+1,w
   862  00DB  00F1               	movwf	display_table@decimal_value+1
   863  00DC  0826               	movf	_decimal_counter,w
   864  00DD  00F0               	movwf	display_table@decimal_value
   865  00DE  120A  118A  2111  120A  118A  	fcall	_display_table
   866  00E3  2905               	goto	i1l1040
   867  00E4                     i1l1032:
   868  00E4  3002               	movlw	2
   869  00E5  0679               	xorwf	_selector,w
   870  00E6  047A               	iorwf	_selector+1,w
   871  00E7  1D03               	btfss	3,2
   872  00E8  28EA               	goto	u27_21
   873  00E9  28EB               	goto	u27_20
   874  00EA                     u27_21:
   875  00EA  28F5               	goto	i1l1036
   876  00EB                     u27_20:
   877  00EB                     i1l1034:
   878                           
   879                           ;main.c: 137:             display_table(decimal_counter[1]);
   880  00EB  0829               	movf	_decimal_counter+3,w
   881  00EC  00F1               	movwf	display_table@decimal_value+1
   882  00ED  0828               	movf	_decimal_counter+2,w
   883  00EE  00F0               	movwf	display_table@decimal_value
   884  00EF  120A  118A  2111  120A  118A  	fcall	_display_table
   885  00F4  2905               	goto	i1l1040
   886  00F5                     i1l1036:
   887  00F5  3003               	movlw	3
   888  00F6  0679               	xorwf	_selector,w
   889  00F7  047A               	iorwf	_selector+1,w
   890  00F8  1D03               	btfss	3,2
   891  00F9  28FB               	goto	u28_21
   892  00FA  28FC               	goto	u28_20
   893  00FB                     u28_21:
   894  00FB  2905               	goto	i1l1040
   895  00FC                     u28_20:
   896  00FC                     i1l1038:
   897                           
   898                           ;main.c: 140:             display_table(decimal_counter[2]);
   899  00FC  082B               	movf	_decimal_counter+5,w
   900  00FD  00F1               	movwf	display_table@decimal_value+1
   901  00FE  082A               	movf	_decimal_counter+4,w
   902  00FF  00F0               	movwf	display_table@decimal_value
   903  0100  120A  118A  2111  120A  118A  	fcall	_display_table
   904  0105                     i1l1040:
   905                           
   906                           ;main.c: 142:         INTCONbits.T0IF = 0;
   907  0105  110B               	bcf	11,2	;volatile
   908  0106                     i1l74:
   909  0106  0876               	movf	??_isr+4,w
   910  0107  00FF               	movwf	btemp+1
   911  0108  0875               	movf	??_isr+3,w
   912  0109  008A               	movwf	10
   913  010A  0874               	movf	??_isr+2,w
   914  010B  0084               	movwf	4
   915  010C  0E73               	swapf	??_isr+1,w
   916  010D  0083               	movwf	3
   917  010E  0EFE               	swapf	btemp,f
   918  010F  0E7E               	swapf	btemp,w
   919  0110  0009               	retfie
   920  0111                     __end_of_isr:
   921                           
   922                           	psect	intentry
   923  0004                     __pintentry:	
   924                           ;incstack = 0
   925                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   926                           
   927  0004                     interrupt_function:
   928  007E                     saved_w	set	btemp
   929  0004  00FE               	movwf	btemp
   930  0005  0E03               	swapf	3,w
   931  0006  00F3               	movwf	??_isr+1
   932  0007  0804               	movf	4,w
   933  0008  00F4               	movwf	??_isr+2
   934  0009  080A               	movf	10,w
   935  000A  00F5               	movwf	??_isr+3
   936  000B  087F               	movf	btemp+1,w
   937  000C  00F6               	movwf	??_isr+4
   938  000D  120A  118A  2829   	ljmp	_isr
   939                           
   940                           	psect	text3
   941  016A                     __ptext3:	
   942 ;; *************** function _select_display *****************
   943 ;; Defined at:
   944 ;;		line 223 in file "main.c"
   945 ;; Parameters:    Size  Location     Type
   946 ;;		None
   947 ;; Auto vars:     Size  Location     Type
   948 ;;		None
   949 ;; Return value:  Size  Location     Type
   950 ;;                  1    wreg      void 
   951 ;; Registers used:
   952 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
   953 ;; Tracked objects:
   954 ;;		On entry : 0/0
   955 ;;		On exit  : 0/0
   956 ;;		Unchanged: 0/0
   957 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   958 ;;      Params:         0       0       0       0       0
   959 ;;      Locals:         0       0       0       0       0
   960 ;;      Temps:          0       0       0       0       0
   961 ;;      Totals:         0       0       0       0       0
   962 ;;Total ram usage:        0 bytes
   963 ;; Hardware stack levels used: 1
   964 ;; This function calls:
   965 ;;		Nothing
   966 ;; This function is called by:
   967 ;;		_isr
   968 ;; This function uses a non-reentrant model
   969 ;;
   970                           
   971  016A                     _select_display:	
   972                           ;psect for function _select_display
   973                           
   974  016A                     i1l930:	
   975                           ;incstack = 0
   976                           ; Regs used in _select_display: [wreg-fsr0h+status,2+status,0+btemp+1]
   977                           
   978                           
   979                           ;main.c: 225:     selector++;
   980  016A  3001               	movlw	1
   981  016B  07F9               	addwf	_selector,f
   982  016C  1803               	skipnc
   983  016D  0AFA               	incf	_selector+1,f
   984  016E  3000               	movlw	0
   985  016F  07FA               	addwf	_selector+1,f
   986  0170                     i1l932:
   987                           
   988                           ;main.c: 227:     if (selector > 3)
   989  0170  087A               	movf	_selector+1,w
   990  0171  3A80               	xorlw	128
   991  0172  00FF               	movwf	btemp+1
   992  0173  3080               	movlw	128
   993  0174  027F               	subwf	btemp+1,w
   994  0175  1D03               	skipz
   995  0176  2979               	goto	u15_25
   996  0177  3004               	movlw	4
   997  0178  0279               	subwf	_selector,w
   998  0179                     u15_25:
   999  0179  1C03               	skipc
  1000  017A  297C               	goto	u15_21
  1001  017B  297D               	goto	u15_20
  1002  017C                     u15_21:
  1003  017C  298F               	goto	i1l944
  1004  017D                     u15_20:
  1005  017D                     i1l934:
  1006                           
  1007                           ;main.c: 228:         selector = 0;
  1008  017D  01F9               	clrf	_selector
  1009  017E  01FA               	clrf	_selector+1
  1010  017F  298F               	goto	i1l944
  1011  0180                     i1l936:
  1012                           
  1013                           ;main.c: 233:             PORTD = 4;
  1014  0180  3004               	movlw	4
  1015  0181  1283               	bcf	3,5	;RP0=0, select bank0
  1016  0182  1303               	bcf	3,6	;RP1=0, select bank0
  1017  0183  0088               	movwf	8	;volatile
  1018                           
  1019                           ;main.c: 234:             break;
  1020  0184  299F               	goto	i1l97
  1021  0185                     i1l938:
  1022                           
  1023                           ;main.c: 237:             PORTD = 2;
  1024  0185  3002               	movlw	2
  1025  0186  1283               	bcf	3,5	;RP0=0, select bank0
  1026  0187  1303               	bcf	3,6	;RP1=0, select bank0
  1027  0188  0088               	movwf	8	;volatile
  1028                           
  1029                           ;main.c: 238:             break;
  1030  0189  299F               	goto	i1l97
  1031  018A                     i1l940:
  1032                           
  1033                           ;main.c: 241:             PORTD = 1;
  1034  018A  3001               	movlw	1
  1035  018B  1283               	bcf	3,5	;RP0=0, select bank0
  1036  018C  1303               	bcf	3,6	;RP1=0, select bank0
  1037  018D  0088               	movwf	8	;volatile
  1038                           
  1039                           ;main.c: 242:             break;
  1040  018E  299F               	goto	i1l97
  1041  018F                     i1l944:
  1042                           
  1043                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1044                           ; Switch size 1, requested type "simple"
  1045                           ; Number of cases is 1, Range of values is 0 to 0
  1046                           ; switch strategies available:
  1047                           ; Name         Instructions Cycles
  1048                           ; simple_byte            4     3 (average)
  1049                           ; direct_byte           11     8 (fixed)
  1050                           ; jumptable            260     6 (fixed)
  1051                           ;	Chosen strategy is simple_byte
  1052  018F  087A               	movf	_selector+1,w
  1053  0190  3A00               	xorlw	0	; case 0
  1054  0191  1903               	skipnz
  1055  0192  2994               	goto	i1l1184
  1056  0193  299F               	goto	i1l97
  1057  0194                     i1l1184:
  1058                           
  1059                           ; Switch size 1, requested type "simple"
  1060                           ; Number of cases is 3, Range of values is 1 to 3
  1061                           ; switch strategies available:
  1062                           ; Name         Instructions Cycles
  1063                           ; simple_byte           10     6 (average)
  1064                           ; direct_byte           20    11 (fixed)
  1065                           ; jumptable            263     9 (fixed)
  1066                           ;	Chosen strategy is simple_byte
  1067  0194  0879               	movf	_selector,w
  1068  0195  3A01               	xorlw	1	; case 1
  1069  0196  1903               	skipnz
  1070  0197  2980               	goto	i1l936
  1071  0198  3A03               	xorlw	3	; case 2
  1072  0199  1903               	skipnz
  1073  019A  2985               	goto	i1l938
  1074  019B  3A01               	xorlw	1	; case 3
  1075  019C  1903               	skipnz
  1076  019D  298A               	goto	i1l940
  1077  019E  299F               	goto	i1l97
  1078  019F                     i1l97:
  1079  019F  0008               	return
  1080  01A0                     __end_of_select_display:
  1081                           
  1082                           	psect	text4
  1083  01CE                     __ptext4:	
  1084 ;; *************** function _reset_TMR0 *****************
  1085 ;; Defined at:
  1086 ;;		line 216 in file "main.c"
  1087 ;; Parameters:    Size  Location     Type
  1088 ;;		None
  1089 ;; Auto vars:     Size  Location     Type
  1090 ;;		None
  1091 ;; Return value:  Size  Location     Type
  1092 ;;                  1    wreg      void 
  1093 ;; Registers used:
  1094 ;;		status,2
  1095 ;; Tracked objects:
  1096 ;;		On entry : 0/0
  1097 ;;		On exit  : 0/0
  1098 ;;		Unchanged: 0/0
  1099 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1100 ;;      Params:         0       0       0       0       0
  1101 ;;      Locals:         0       0       0       0       0
  1102 ;;      Temps:          0       0       0       0       0
  1103 ;;      Totals:         0       0       0       0       0
  1104 ;;Total ram usage:        0 bytes
  1105 ;; Hardware stack levels used: 1
  1106 ;; This function calls:
  1107 ;;		Nothing
  1108 ;; This function is called by:
  1109 ;;		_isr
  1110 ;; This function uses a non-reentrant model
  1111 ;;
  1112                           
  1113  01CE                     _reset_TMR0:	
  1114                           ;psect for function _reset_TMR0
  1115                           
  1116  01CE                     i1l924:	
  1117                           ;incstack = 0
  1118                           ; Regs used in _reset_TMR0: [status,2]
  1119                           
  1120                           
  1121                           ;main.c: 218:     TMR0 = 0;
  1122  01CE  1283               	bcf	3,5	;RP0=0, select bank0
  1123  01CF  1303               	bcf	3,6	;RP1=0, select bank0
  1124  01D0  0181               	clrf	1	;volatile
  1125  01D1                     i1l926:
  1126                           
  1127                           ;main.c: 219:     INTCONbits.T0IF = 0;
  1128  01D1  110B               	bcf	11,2	;volatile
  1129  01D2                     i1l88:
  1130  01D2  0008               	return
  1131  01D3                     __end_of_reset_TMR0:
  1132                           
  1133                           	psect	text5
  1134  0111                     __ptext5:	
  1135 ;; *************** function _display_table *****************
  1136 ;; Defined at:
  1137 ;;		line 248 in file "main.c"
  1138 ;; Parameters:    Size  Location     Type
  1139 ;;  decimal_valu    2    0[COMMON] int 
  1140 ;; Auto vars:     Size  Location     Type
  1141 ;;		None
  1142 ;; Return value:  Size  Location     Type
  1143 ;;                  1    wreg      void 
  1144 ;; Registers used:
  1145 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1146 ;; Tracked objects:
  1147 ;;		On entry : 0/0
  1148 ;;		On exit  : 0/0
  1149 ;;		Unchanged: 0/0
  1150 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1151 ;;      Params:         2       0       0       0       0
  1152 ;;      Locals:         0       0       0       0       0
  1153 ;;      Temps:          0       0       0       0       0
  1154 ;;      Totals:         2       0       0       0       0
  1155 ;;Total ram usage:        2 bytes
  1156 ;; Hardware stack levels used: 1
  1157 ;; This function calls:
  1158 ;;		Nothing
  1159 ;; This function is called by:
  1160 ;;		_isr
  1161 ;; This function uses a non-reentrant model
  1162 ;;
  1163                           
  1164  0111                     _display_table:	
  1165                           ;psect for function _display_table
  1166                           
  1167  0111                     i1l950:	
  1168                           ;incstack = 0
  1169                           ; Regs used in _display_table: [wreg-fsr0h+status,2+status,0]
  1170                           
  1171                           
  1172                           ;main.c: 248: void display_table(int decimal_value);main.c: 249: {;main.c: 250:     swit
      +                          ch (decimal_value)
  1173  0111  2944               	goto	i1l974
  1174  0112                     i1l952:
  1175                           
  1176                           ;main.c: 253:             PORTC = 63;
  1177  0112  303F               	movlw	63
  1178  0113  1283               	bcf	3,5	;RP0=0, select bank0
  1179  0114  1303               	bcf	3,6	;RP1=0, select bank0
  1180  0115  0087               	movwf	7	;volatile
  1181                           
  1182                           ;main.c: 254:             break;
  1183  0116  2969               	goto	i1l112
  1184  0117                     i1l954:
  1185                           
  1186                           ;main.c: 257:             PORTC = 6;
  1187  0117  3006               	movlw	6
  1188  0118  1283               	bcf	3,5	;RP0=0, select bank0
  1189  0119  1303               	bcf	3,6	;RP1=0, select bank0
  1190  011A  0087               	movwf	7	;volatile
  1191                           
  1192                           ;main.c: 258:             break;
  1193  011B  2969               	goto	i1l112
  1194  011C                     i1l956:
  1195                           
  1196                           ;main.c: 261:             PORTC = 91;
  1197  011C  305B               	movlw	91
  1198  011D  1283               	bcf	3,5	;RP0=0, select bank0
  1199  011E  1303               	bcf	3,6	;RP1=0, select bank0
  1200  011F  0087               	movwf	7	;volatile
  1201                           
  1202                           ;main.c: 262:             break;
  1203  0120  2969               	goto	i1l112
  1204  0121                     i1l958:
  1205                           
  1206                           ;main.c: 265:             PORTC = 79;
  1207  0121  304F               	movlw	79
  1208  0122  1283               	bcf	3,5	;RP0=0, select bank0
  1209  0123  1303               	bcf	3,6	;RP1=0, select bank0
  1210  0124  0087               	movwf	7	;volatile
  1211                           
  1212                           ;main.c: 266:             break;
  1213  0125  2969               	goto	i1l112
  1214  0126                     i1l960:
  1215                           
  1216                           ;main.c: 269:             PORTC = 102;
  1217  0126  3066               	movlw	102
  1218  0127  1283               	bcf	3,5	;RP0=0, select bank0
  1219  0128  1303               	bcf	3,6	;RP1=0, select bank0
  1220  0129  0087               	movwf	7	;volatile
  1221                           
  1222                           ;main.c: 270:             break;
  1223  012A  2969               	goto	i1l112
  1224  012B                     i1l962:
  1225                           
  1226                           ;main.c: 273:             PORTC = 109;
  1227  012B  306D               	movlw	109
  1228  012C  1283               	bcf	3,5	;RP0=0, select bank0
  1229  012D  1303               	bcf	3,6	;RP1=0, select bank0
  1230  012E  0087               	movwf	7	;volatile
  1231                           
  1232                           ;main.c: 274:             break;
  1233  012F  2969               	goto	i1l112
  1234  0130                     i1l964:
  1235                           
  1236                           ;main.c: 277:             PORTC = 125;
  1237  0130  307D               	movlw	125
  1238  0131  1283               	bcf	3,5	;RP0=0, select bank0
  1239  0132  1303               	bcf	3,6	;RP1=0, select bank0
  1240  0133  0087               	movwf	7	;volatile
  1241                           
  1242                           ;main.c: 278:             break;
  1243  0134  2969               	goto	i1l112
  1244  0135                     i1l966:
  1245                           
  1246                           ;main.c: 281:             PORTC = 7;
  1247  0135  3007               	movlw	7
  1248  0136  1283               	bcf	3,5	;RP0=0, select bank0
  1249  0137  1303               	bcf	3,6	;RP1=0, select bank0
  1250  0138  0087               	movwf	7	;volatile
  1251                           
  1252                           ;main.c: 282:             break;
  1253  0139  2969               	goto	i1l112
  1254  013A                     i1l968:
  1255                           
  1256                           ;main.c: 285:             PORTC = 127;
  1257  013A  307F               	movlw	127
  1258  013B  1283               	bcf	3,5	;RP0=0, select bank0
  1259  013C  1303               	bcf	3,6	;RP1=0, select bank0
  1260  013D  0087               	movwf	7	;volatile
  1261                           
  1262                           ;main.c: 286:             break;
  1263  013E  2969               	goto	i1l112
  1264  013F                     i1l970:
  1265                           
  1266                           ;main.c: 289:             PORTC = 111;
  1267  013F  306F               	movlw	111
  1268  0140  1283               	bcf	3,5	;RP0=0, select bank0
  1269  0141  1303               	bcf	3,6	;RP1=0, select bank0
  1270  0142  0087               	movwf	7	;volatile
  1271                           
  1272                           ;main.c: 290:             break;
  1273  0143  2969               	goto	i1l112
  1274  0144                     i1l974:
  1275                           
  1276                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1277                           ; Switch size 1, requested type "simple"
  1278                           ; Number of cases is 1, Range of values is 0 to 0
  1279                           ; switch strategies available:
  1280                           ; Name         Instructions Cycles
  1281                           ; simple_byte            4     3 (average)
  1282                           ; direct_byte           11     8 (fixed)
  1283                           ; jumptable            260     6 (fixed)
  1284                           ;	Chosen strategy is simple_byte
  1285  0144  0871               	movf	display_table@decimal_value+1,w
  1286  0145  3A00               	xorlw	0	; case 0
  1287  0146  1903               	skipnz
  1288  0147  2949               	goto	i1l1186
  1289  0148  2969               	goto	i1l112
  1290  0149                     i1l1186:
  1291                           
  1292                           ; Switch size 1, requested type "simple"
  1293                           ; Number of cases is 10, Range of values is 0 to 9
  1294                           ; switch strategies available:
  1295                           ; Name         Instructions Cycles
  1296                           ; simple_byte           31    16 (average)
  1297                           ; direct_byte           38     8 (fixed)
  1298                           ; jumptable            260     6 (fixed)
  1299                           ;	Chosen strategy is simple_byte
  1300  0149  0870               	movf	display_table@decimal_value,w
  1301  014A  3A00               	xorlw	0	; case 0
  1302  014B  1903               	skipnz
  1303  014C  2912               	goto	i1l952
  1304  014D  3A01               	xorlw	1	; case 1
  1305  014E  1903               	skipnz
  1306  014F  2917               	goto	i1l954
  1307  0150  3A03               	xorlw	3	; case 2
  1308  0151  1903               	skipnz
  1309  0152  291C               	goto	i1l956
  1310  0153  3A01               	xorlw	1	; case 3
  1311  0154  1903               	skipnz
  1312  0155  2921               	goto	i1l958
  1313  0156  3A07               	xorlw	7	; case 4
  1314  0157  1903               	skipnz
  1315  0158  2926               	goto	i1l960
  1316  0159  3A01               	xorlw	1	; case 5
  1317  015A  1903               	skipnz
  1318  015B  292B               	goto	i1l962
  1319  015C  3A03               	xorlw	3	; case 6
  1320  015D  1903               	skipnz
  1321  015E  2930               	goto	i1l964
  1322  015F  3A01               	xorlw	1	; case 7
  1323  0160  1903               	skipnz
  1324  0161  2935               	goto	i1l966
  1325  0162  3A0F               	xorlw	15	; case 8
  1326  0163  1903               	skipnz
  1327  0164  293A               	goto	i1l968
  1328  0165  3A01               	xorlw	1	; case 9
  1329  0166  1903               	skipnz
  1330  0167  293F               	goto	i1l970
  1331  0168  2969               	goto	i1l112
  1332  0169                     i1l112:
  1333  0169  0008               	return
  1334  016A                     __end_of_display_table:
  1335  007E                     btemp	set	126	;btemp
  1336  007E                     wtemp0	set	126
  1337                           
  1338                           	psect	idloc
  1339                           
  1340                           ;Config register IDLOC0 @ 0x2000
  1341                           ;	unspecified, using default values
  1342  2000                     	org	8192
  1343  2000  3FFF               	dw	16383
  1344                           
  1345                           ;Config register IDLOC1 @ 0x2001
  1346                           ;	unspecified, using default values
  1347  2001                     	org	8193
  1348  2001  3FFF               	dw	16383
  1349                           
  1350                           ;Config register IDLOC2 @ 0x2002
  1351                           ;	unspecified, using default values
  1352  2002                     	org	8194
  1353  2002  3FFF               	dw	16383
  1354                           
  1355                           ;Config register IDLOC3 @ 0x2003
  1356                           ;	unspecified, using default values
  1357  2003                     	org	8195
  1358  2003  3FFF               	dw	16383
  1359                           
  1360                           	psect	config
  1361                           
  1362                           ;Config register CONFIG1 @ 0x2007
  1363                           ;	Oscillator Selection bits
  1364                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1365                           ;	Watchdog Timer Enable bit
  1366                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1367                           ;	Power-up Timer Enable bit
  1368                           ;	PWRTE = OFF, PWRT disabled
  1369                           ;	RE3/MCLR pin function select bit
  1370                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1371                           ;	Code Protection bit
  1372                           ;	CP = OFF, Program memory code protection is disabled
  1373                           ;	Data Code Protection bit
  1374                           ;	CPD = OFF, Data memory code protection is disabled
  1375                           ;	Brown Out Reset Selection bits
  1376                           ;	BOREN = OFF, BOR disabled
  1377                           ;	Internal External Switchover bit
  1378                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1379                           ;	Fail-Safe Clock Monitor Enabled bit
  1380                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1381                           ;	Low Voltage Programming Enable bit
  1382                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1383                           ;	In-Circuit Debugger Mode bit
  1384                           ;	DEBUG = 0x1, unprogrammed default
  1385  2007                     	org	8199
  1386  2007  20D4               	dw	8404
  1387                           
  1388                           ;Config register CONFIG2 @ 0x2008
  1389                           ;	Brown-out Reset Selection bit
  1390                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1391                           ;	Flash Program Memory Self Write Enable bits
  1392                           ;	WRT = OFF, Write protection off
  1393  2008                     	org	8200
  1394  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         16
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      11
    BANK0            80      0      12
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->_display_table

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _isr                                                  5     5      0     250
                                              2 COMMON     5     5      0
                      _display_table
                         _reset_TMR0
                     _select_display
 ---------------------------------------------------------------------------------
 (3) _select_display                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _reset_TMR0                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _display_table                                        2     0      2     250
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _setup

 _isr (ROOT)
   _display_table
   _reset_TMR0
   _select_display

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      17       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       C       5       15.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      17      12        0.0%


Microchip Technology PIC Macro Assembler V2.35 build 20211206165544 
Symbol Table                                                                                   Sat Apr  9 20:56:32 2022

                        l80 01CA                          l85 01C4                          l79 01CA  
                       _isr 0029             _decimal_counter 0026                         fsr0 0004  
                       indf 0000                        l1100 01AE                        l1110 01B3  
                      l1102 01AF                        l1120 01B8                        l1112 01B4  
                      l1104 01B0                        l1130 01BD                        l1122 01B9  
                      l1114 01B5                        l1106 01B1                        l1132 01BE  
                      l1124 01BA                        l1116 01B6                        l1108 01B2  
                      l1134 01C1                        l1126 01BB                        l1118 01B7  
                      l1142 01C5                        l1136 01C2                        l1128 01BC  
                      l1138 01C3                        l1090 01A9                        l1092 01AA  
                      l1084 01A0                        l1094 01AB                        l1086 01A4  
                      l1096 01AC                        l1088 01A8                        l1098 01AD  
                      ?_isr 0070                        i1l56 003E                        i1l74 0106  
                      i1l88 01D2                        i1l97 019F              ?_display_table 0070  
                      _TMR0 0001                        _main 01C5                        btemp 007E  
                      start 0010                       ??_isr 0072                       ?_main 0070  
                     _ANSEL 0188                       i1l112 0169                       i1l930 016A  
                     i1l924 01CE                       i1l940 018A                       i1l932 0170  
                     i1l950 0111                       i1l926 01D1                       i1l934 017D  
                     i1l960 0126                       i1l952 0112                       i1l936 0180  
                     i1l944 018F                       i1l970 013F                       i1l962 012B  
                     i1l954 0117                       i1l938 0185                       i1l964 0130  
                     i1l956 011C                       i1l980 0029                       i1l966 0135  
                     i1l958 0121                       i1l974 0144                       i1l990 0048  
                     i1l982 002D                       i1l968 013A                       i1l992 004A  
                     i1l984 0033                       i1l986 0039                       i1l994 004B  
                     i1l996 004F                       i1l988 0042                       i1l998 0054  
                     u20_20 0068                       u20_21 0067                       u20_25 0064  
                     u21_20 0082                       u21_21 0081                       u21_25 007E  
                     u22_20 009C                       u22_21 009B                       u22_25 0098  
                     u15_20 017D                       u23_20 00AA                       u15_21 017C  
                     u23_21 00A9                       u15_25 0179                       u24_20 00BD  
                     u16_20 002D                       u24_21 00BC                       u16_21 002C  
                     u25_20 00D0                       u17_20 0033                       u25_21 00CF  
                     u17_21 0032                       u26_20 00DA                       u18_20 0042  
                     u26_21 00D9                       u18_21 0041                       u27_20 00EB  
                     u19_20 004F                       u27_21 00EA                       u19_21 004E  
                     _PORTA 0005                       _PORTB 0006                       _PORTC 0007  
                     _PORTD 0008                       u28_20 00FC                       u28_21 00FB  
                     _TRISA 0085                       _TRISC 0087                       _TRISD 0088  
                     _setup 01A0                       pclath 000A                       status 0003  
                     wtemp0 007E             __initialization 0013                __end_of_main 01CE  
                    ??_main 0000             ??_display_table 0072                      ?_setup 0070  
                    _ANSELH 0189                      i1l1000 0059                      i1l1010 0086  
                    i1l1002 0068                      i1l1020 00B4                      i1l1012 008D  
                    i1l1004 006C                      i1l1030 00DA                      i1l1022 00BD  
                    i1l1014 009C                      i1l1006 0073                      i1l1040 0105  
                    i1l1032 00E4                      i1l1024 00C8                      i1l1008 0082  
                    i1l1016 00A4                      i1l1034 00EB                      i1l1026 00D0  
                    i1l1018 00AA                      i1l1036 00F5                      i1l1028 00D4  
                    i1l1038 00FC                      i1l1184 0194                      i1l1186 0149  
                    saved_w 007E     __end_of__initialization 0025              _select_display 016A  
            __pcstackCOMMON 0070               __end_of_setup 01C5              _OPTION_REGbits 0081  
                   ??_setup 0000                  __pbssBANK0 0020      __end_of_select_display 01A0  
                __pmaintext 01C5                  __pintentry 0004  display_table@decimal_value 0070  
           ?_select_display 0070                     __ptext1 01A0                     __ptext2 0029  
                   __ptext3 016A                     __ptext4 01CE                     __ptext5 0111  
      end_of_initialization 0025                  _reset_TMR0 01CE                   _PORTBbits 0006  
                 _TRISBbits 0086       __end_of_display_table 016A         start_initialization 0013  
               __end_of_isr 0111                _counter_temp 0077                 ?_reset_TMR0 0070  
               __pbssCOMMON 0077                   ___latbits 0002               __pcstackBANK0 0000  
          ??_select_display 0070           interrupt_function 0004                    _IOCBbits 0096  
                  _WPUBbits 0095                ??_reset_TMR0 0070                    _selector 0079  
                _INTCONbits 000B          __end_of_reset_TMR0 01D3                    intlevel1 0000  
                _OSCCONbits 008F              _display_values 0020               _display_table 0111  
