

Microchip MPLAB XC8 Assembler V2.35 build 20211206165544 
                                                                                               Sat Apr 30 08:53:55 2022

Microchip MPLAB XC8 C Compiler v2.35 (Free license) build 20211206165544 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	intentry,global,class=CODE,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    14                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    15                           	dabs	1,0x7E,2
    16  0000                     
    17                           ; Version 2.40
    18                           ; Generated 17/11/2021 GMT
    19                           ; 
    20                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution. Publication is not required when
    34                           ;        this file is used in an embedded application.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC16F887 Definitions
    50                           ; 
    51                           ; SFR Addresses
    52  0000                     	;# 
    53  0001                     	;# 
    54  0002                     	;# 
    55  0003                     	;# 
    56  0004                     	;# 
    57  0005                     	;# 
    58  0006                     	;# 
    59  0007                     	;# 
    60  0008                     	;# 
    61  0009                     	;# 
    62  000A                     	;# 
    63  000B                     	;# 
    64  000C                     	;# 
    65  000D                     	;# 
    66  000E                     	;# 
    67  000E                     	;# 
    68  000F                     	;# 
    69  0010                     	;# 
    70  0011                     	;# 
    71  0012                     	;# 
    72  0013                     	;# 
    73  0014                     	;# 
    74  0015                     	;# 
    75  0015                     	;# 
    76  0016                     	;# 
    77  0017                     	;# 
    78  0018                     	;# 
    79  0019                     	;# 
    80  001A                     	;# 
    81  001B                     	;# 
    82  001B                     	;# 
    83  001C                     	;# 
    84  001D                     	;# 
    85  001E                     	;# 
    86  001F                     	;# 
    87  0081                     	;# 
    88  0085                     	;# 
    89  0086                     	;# 
    90  0087                     	;# 
    91  0088                     	;# 
    92  0089                     	;# 
    93  008C                     	;# 
    94  008D                     	;# 
    95  008E                     	;# 
    96  008F                     	;# 
    97  0090                     	;# 
    98  0091                     	;# 
    99  0092                     	;# 
   100  0093                     	;# 
   101  0093                     	;# 
   102  0093                     	;# 
   103  0094                     	;# 
   104  0095                     	;# 
   105  0096                     	;# 
   106  0097                     	;# 
   107  0098                     	;# 
   108  0099                     	;# 
   109  009A                     	;# 
   110  009B                     	;# 
   111  009C                     	;# 
   112  009D                     	;# 
   113  009E                     	;# 
   114  009F                     	;# 
   115  0105                     	;# 
   116  0107                     	;# 
   117  0108                     	;# 
   118  0109                     	;# 
   119  010C                     	;# 
   120  010C                     	;# 
   121  010D                     	;# 
   122  010E                     	;# 
   123  010F                     	;# 
   124  0185                     	;# 
   125  0187                     	;# 
   126  0188                     	;# 
   127  0189                     	;# 
   128  018C                     	;# 
   129  018D                     	;# 
   130  0000                     	;# 
   131  0001                     	;# 
   132  0002                     	;# 
   133  0003                     	;# 
   134  0004                     	;# 
   135  0005                     	;# 
   136  0006                     	;# 
   137  0007                     	;# 
   138  0008                     	;# 
   139  0009                     	;# 
   140  000A                     	;# 
   141  000B                     	;# 
   142  000C                     	;# 
   143  000D                     	;# 
   144  000E                     	;# 
   145  000E                     	;# 
   146  000F                     	;# 
   147  0010                     	;# 
   148  0011                     	;# 
   149  0012                     	;# 
   150  0013                     	;# 
   151  0014                     	;# 
   152  0015                     	;# 
   153  0015                     	;# 
   154  0016                     	;# 
   155  0017                     	;# 
   156  0018                     	;# 
   157  0019                     	;# 
   158  001A                     	;# 
   159  001B                     	;# 
   160  001B                     	;# 
   161  001C                     	;# 
   162  001D                     	;# 
   163  001E                     	;# 
   164  001F                     	;# 
   165  0081                     	;# 
   166  0085                     	;# 
   167  0086                     	;# 
   168  0087                     	;# 
   169  0088                     	;# 
   170  0089                     	;# 
   171  008C                     	;# 
   172  008D                     	;# 
   173  008E                     	;# 
   174  008F                     	;# 
   175  0090                     	;# 
   176  0091                     	;# 
   177  0092                     	;# 
   178  0093                     	;# 
   179  0093                     	;# 
   180  0093                     	;# 
   181  0094                     	;# 
   182  0095                     	;# 
   183  0096                     	;# 
   184  0097                     	;# 
   185  0098                     	;# 
   186  0099                     	;# 
   187  009A                     	;# 
   188  009B                     	;# 
   189  009C                     	;# 
   190  009D                     	;# 
   191  009E                     	;# 
   192  009F                     	;# 
   193  0105                     	;# 
   194  0107                     	;# 
   195  0108                     	;# 
   196  0109                     	;# 
   197  010C                     	;# 
   198  010C                     	;# 
   199  010D                     	;# 
   200  010E                     	;# 
   201  010F                     	;# 
   202  0185                     	;# 
   203  0187                     	;# 
   204  0188                     	;# 
   205  0189                     	;# 
   206  018C                     	;# 
   207  018D                     	;# 
   208  0001                     _TMR0	set	1
   209  0012                     _T2CONbits	set	18
   210  0007                     _PORTC	set	7
   211  001D                     _CCP2CONbits	set	29
   212  0008                     _PORTD	set	8
   213  0005                     _PORTA	set	5
   214  0008                     _PORTDbits	set	8
   215  0006                     _PORTB	set	6
   216  000B                     _INTCONbits	set	11
   217  001B                     _CCPR2L	set	27
   218  0017                     _CCP1CONbits	set	23
   219  001E                     _ADRESH	set	30
   220  0015                     _CCPR1L	set	21
   221  001F                     _ADCON0bits	set	31
   222  000C                     _PIR1bits	set	12
   223  008C                     _PIE1bits	set	140
   224  0081                     _OPTION_REGbits	set	129
   225  0092                     _PR2	set	146
   226  0087                     _TRISC	set	135
   227  0087                     _TRISCbits	set	135
   228  009F                     _ADCON1bits	set	159
   229  0088                     _TRISD	set	136
   230  0086                     _TRISB	set	134
   231  0085                     _TRISA	set	133
   232  008F                     _OSCCONbits	set	143
   233  009E                     _ADRESL	set	158
   234  0189                     _ANSELH	set	393
   235  0188                     _ANSEL	set	392
   236                           
   237                           	psect	cinit
   238  000F                     start_initialization:	
   239                           ; #config settings
   240                           
   241  000F                     __initialization:
   242                           
   243                           ; Clear objects allocated to COMMON
   244  000F  01F5               	clrf	__pbssCOMMON& (0+127)
   245  0010  01F6               	clrf	(__pbssCOMMON+1)& (0+127)
   246  0011                     end_of_initialization:	
   247                           ;End of C runtime variable initialization code
   248                           
   249  0011                     __end_of__initialization:
   250  0011  0183               	clrf	3
   251  0012  120A  118A  2909   	ljmp	_main	;jump to C main() function
   252                           
   253                           	psect	bssCOMMON
   254  0075                     __pbssCOMMON:
   255  0075                     _counter:
   256  0075                     	ds	1
   257  0076                     _conversion:
   258  0076                     	ds	1
   259                           
   260                           	psect	cstackCOMMON
   261  0070                     __pcstackCOMMON:
   262  0070                     ?_reset_TMR0:
   263  0070                     ?_setup:	
   264                           ; 1 bytes @ 0x0
   265                           
   266  0070                     ?_isr:	
   267                           ; 1 bytes @ 0x0
   268                           
   269  0070                     ??_isr:	
   270                           ; 1 bytes @ 0x0
   271                           
   272  0070                     ?_main:	
   273                           ; 1 bytes @ 0x0
   274                           
   275  0070                     ?i1_reset_TMR0:	
   276                           ; 1 bytes @ 0x0
   277                           
   278  0070                     ??i1_reset_TMR0:	
   279                           ; 1 bytes @ 0x0
   280                           
   281                           
   282                           ; 1 bytes @ 0x0
   283  0070                     	ds	4
   284  0074                     ??_reset_TMR0:
   285  0074                     ??_setup:	
   286                           ; 1 bytes @ 0x4
   287                           
   288  0074                     ??_main:	
   289                           ; 1 bytes @ 0x4
   290                           
   291                           
   292                           ; 1 bytes @ 0x4
   293  0074                     	ds	1
   294                           
   295                           	psect	maintext
   296  0109                     __pmaintext:	
   297 ;;
   298 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   299 ;;
   300 ;; *************** function _main *****************
   301 ;; Defined at:
   302 ;;		line 112 in file "main.c"
   303 ;; Parameters:    Size  Location     Type
   304 ;;		None
   305 ;; Auto vars:     Size  Location     Type
   306 ;;		None
   307 ;; Return value:  Size  Location     Type
   308 ;;                  1    wreg      void 
   309 ;; Registers used:
   310 ;;		wreg, status,2, status,0, pclath, cstack
   311 ;; Tracked objects:
   312 ;;		On entry : B00/0
   313 ;;		On exit  : 0/0
   314 ;;		Unchanged: 0/0
   315 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   316 ;;      Params:         0       0       0       0       0
   317 ;;      Locals:         0       0       0       0       0
   318 ;;      Temps:          1       0       0       0       0
   319 ;;      Totals:         1       0       0       0       0
   320 ;;Total ram usage:        1 bytes
   321 ;; Hardware stack levels required when called: 3
   322 ;; This function calls:
   323 ;;		_reset_TMR0
   324 ;;		_setup
   325 ;; This function is called by:
   326 ;;		Startup code after reset
   327 ;; This function uses a non-reentrant model
   328 ;;
   329                           
   330  0109                     _main:	
   331                           ;psect for function _main
   332                           
   333  0109                     l813:	
   334                           ;incstack = 0
   335                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   336                           
   337                           
   338                           ;main.c: 114:     setup();
   339  0109  120A  118A  20A9  120A  118A  	fcall	_setup
   340  010E                     l815:
   341                           
   342                           ;main.c: 115:     reset_TMR0();
   343  010E  120A  118A  2151  120A  118A  	fcall	_reset_TMR0
   344                           
   345                           ;main.c: 116:     _delay((unsigned long)((50)*(4000000/4000000.0)));
   346  0113  3010               	movlw	16
   347  0114  00F4               	movwf	??_main
   348  0115                     u157:
   349  0115  0BF4               	decfsz	??_main,f
   350  0116  2915               	goto	u157
   351  0117  0000               	nop
   352  0118                     l817:
   353                           
   354                           ;main.c: 119:     {;main.c: 120:         if (ADCON0bits.GO == 0)
   355  0118  1283               	bcf	3,5	;RP0=0, select bank0
   356  0119  1303               	bcf	3,6	;RP1=0, select bank0
   357  011A  189F               	btfsc	31,1	;volatile
   358  011B  291D               	goto	u111
   359  011C  291E               	goto	u110
   360  011D                     u111:
   361  011D  2918               	goto	l817
   362  011E                     u110:
   363  011E                     l819:
   364                           
   365                           ;main.c: 121:         {;main.c: 122:             if (ADCON0bits.CHS == 0b0000)
   366  011E  0C1F               	rrf	31,w	;volatile
   367  011F  00F4               	movwf	??_main
   368  0120  0C74               	rrf	??_main,w
   369  0121  390F               	andlw	15
   370  0122  3A00               	xorlw	0
   371  0123  1D03               	skipz
   372  0124  2926               	goto	u121
   373  0125  2927               	goto	u120
   374  0126                     u121:
   375  0126  292C               	goto	l823
   376  0127                     u120:
   377  0127                     l821:
   378                           
   379                           ;main.c: 123:             {;main.c: 124:                 ADCON0bits.CHS = 0b0001;
   380  0127  081F               	movf	31,w	;volatile
   381  0128  39C3               	andlw	-61
   382  0129  3804               	iorlw	4
   383  012A  009F               	movwf	31	;volatile
   384                           
   385                           ;main.c: 125:             }
   386  012B  2945               	goto	l831
   387  012C                     l823:
   388  012C  0C1F               	rrf	31,w	;volatile
   389  012D  00F4               	movwf	??_main
   390  012E  0C74               	rrf	??_main,w
   391  012F  390F               	andlw	15
   392  0130  3A01               	xorlw	1
   393  0131  1D03               	skipz
   394  0132  2934               	goto	u131
   395  0133  2935               	goto	u130
   396  0134                     u131:
   397  0134  293A               	goto	l827
   398  0135                     u130:
   399  0135                     l825:
   400                           
   401                           ;main.c: 128:             {;main.c: 129:                 ADCON0bits.CHS = 0b0010;
   402  0135  081F               	movf	31,w	;volatile
   403  0136  39C3               	andlw	-61
   404  0137  3808               	iorlw	8
   405  0138  009F               	movwf	31	;volatile
   406                           
   407                           ;main.c: 130:             }
   408  0139  2945               	goto	l831
   409  013A                     l827:
   410  013A  0C1F               	rrf	31,w	;volatile
   411  013B  00F4               	movwf	??_main
   412  013C  0C74               	rrf	??_main,w
   413  013D  390F               	andlw	15
   414  013E  3A02               	xorlw	2
   415  013F  1D03               	skipz
   416  0140  2942               	goto	u141
   417  0141  2943               	goto	u140
   418  0142                     u141:
   419  0142  2945               	goto	l831
   420  0143                     u140:
   421  0143                     l829:
   422                           
   423                           ;main.c: 133:             {;main.c: 134:                 ADCON0bits.CHS = 0b0000;
   424  0143  30C3               	movlw	-61
   425  0144  059F               	andwf	31,f	;volatile
   426  0145                     l831:
   427                           
   428                           ;main.c: 137:             _delay((unsigned long)((50)*(4000000/4000000.0)));
   429  0145  3010               	movlw	16
   430  0146  00F4               	movwf	??_main
   431  0147                     u167:
   432  0147  0BF4               	decfsz	??_main,f
   433  0148  2947               	goto	u167
   434  0149  0000               	nop
   435  014A                     l833:
   436                           
   437                           ;main.c: 138:             ADCON0bits.GO = 1;
   438  014A  1283               	bcf	3,5	;RP0=0, select bank0
   439  014B  1303               	bcf	3,6	;RP1=0, select bank0
   440  014C  149F               	bsf	31,1	;volatile
   441  014D  2918               	goto	l817
   442  014E  120A  118A  280C   	ljmp	start
   443  0151                     __end_of_main:
   444                           
   445                           	psect	text1
   446  00A9                     __ptext1:	
   447 ;; *************** function _setup *****************
   448 ;; Defined at:
   449 ;;		line 145 in file "main.c"
   450 ;; Parameters:    Size  Location     Type
   451 ;;		None
   452 ;; Auto vars:     Size  Location     Type
   453 ;;		None
   454 ;; Return value:  Size  Location     Type
   455 ;;                  1    wreg      void 
   456 ;; Registers used:
   457 ;;		wreg, status,2, status,0
   458 ;; Tracked objects:
   459 ;;		On entry : 0/0
   460 ;;		On exit  : 0/0
   461 ;;		Unchanged: 0/0
   462 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   463 ;;      Params:         0       0       0       0       0
   464 ;;      Locals:         0       0       0       0       0
   465 ;;      Temps:          0       0       0       0       0
   466 ;;      Totals:         0       0       0       0       0
   467 ;;Total ram usage:        0 bytes
   468 ;; Hardware stack levels used: 1
   469 ;; Hardware stack levels required when called: 2
   470 ;; This function calls:
   471 ;;		Nothing
   472 ;; This function is called by:
   473 ;;		_main
   474 ;; This function uses a non-reentrant model
   475 ;;
   476                           
   477  00A9                     _setup:	
   478                           ;psect for function _setup
   479                           
   480  00A9                     l701:	
   481                           ;incstack = 0
   482                           ; Regs used in _setup: [wreg+status,2+status,0]
   483                           
   484                           
   485                           ;main.c: 148:     ANSEL = 0b00000111;
   486  00A9  3007               	movlw	7
   487  00AA  1683               	bsf	3,5	;RP0=1, select bank3
   488  00AB  1703               	bsf	3,6	;RP1=1, select bank3
   489  00AC  0088               	movwf	8	;volatile
   490  00AD                     l703:
   491                           
   492                           ;main.c: 149:     ANSELH = 0;
   493  00AD  0189               	clrf	9	;volatile
   494  00AE                     l705:
   495                           
   496                           ;main.c: 152:     OSCCONbits.IRCF = 0b0111;
   497  00AE  3070               	movlw	112
   498  00AF  1683               	bsf	3,5	;RP0=1, select bank1
   499  00B0  1303               	bcf	3,6	;RP1=0, select bank1
   500  00B1  048F               	iorwf	15,f	;volatile
   501  00B2                     l707:
   502                           
   503                           ;main.c: 153:     OSCCONbits.SCS = 1;
   504  00B2  140F               	bsf	15,0	;volatile
   505  00B3                     l709:
   506                           
   507                           ;main.c: 156:     TRISA = 0b00000111;
   508  00B3  3007               	movlw	7
   509  00B4  0085               	movwf	5	;volatile
   510  00B5                     l711:
   511                           
   512                           ;main.c: 157:     PORTA = 0;
   513  00B5  1283               	bcf	3,5	;RP0=0, select bank0
   514  00B6  1303               	bcf	3,6	;RP1=0, select bank0
   515  00B7  0185               	clrf	5	;volatile
   516  00B8                     l713:
   517                           
   518                           ;main.c: 159:     TRISB = 0;
   519  00B8  1683               	bsf	3,5	;RP0=1, select bank1
   520  00B9  1303               	bcf	3,6	;RP1=0, select bank1
   521  00BA  0186               	clrf	6	;volatile
   522  00BB                     l715:
   523                           
   524                           ;main.c: 160:     PORTB = 0;
   525  00BB  1283               	bcf	3,5	;RP0=0, select bank0
   526  00BC  1303               	bcf	3,6	;RP1=0, select bank0
   527  00BD  0186               	clrf	6	;volatile
   528  00BE                     l717:
   529                           
   530                           ;main.c: 162:     TRISD = 0;
   531  00BE  1683               	bsf	3,5	;RP0=1, select bank1
   532  00BF  1303               	bcf	3,6	;RP1=0, select bank1
   533  00C0  0188               	clrf	8	;volatile
   534  00C1                     l719:
   535                           
   536                           ;main.c: 163:     PORTD = 0;
   537  00C1  1283               	bcf	3,5	;RP0=0, select bank0
   538  00C2  1303               	bcf	3,6	;RP1=0, select bank0
   539  00C3  0188               	clrf	8	;volatile
   540                           
   541                           ;main.c: 166:     ADCON0bits.ADCS = 0b01;
   542  00C4  081F               	movf	31,w	;volatile
   543  00C5  393F               	andlw	-193
   544  00C6  3840               	iorlw	64
   545  00C7  009F               	movwf	31	;volatile
   546                           
   547                           ;main.c: 167:     ADCON0bits.CHS = 0b0000;
   548  00C8  30C3               	movlw	-61
   549  00C9  059F               	andwf	31,f	;volatile
   550  00CA                     l721:
   551                           
   552                           ;main.c: 168:     ADCON1bits.VCFG0 = 0;
   553  00CA  1683               	bsf	3,5	;RP0=1, select bank1
   554  00CB  1303               	bcf	3,6	;RP1=0, select bank1
   555  00CC  121F               	bcf	31,4	;volatile
   556  00CD                     l723:
   557                           
   558                           ;main.c: 169:     ADCON1bits.VCFG1 = 0;
   559  00CD  129F               	bcf	31,5	;volatile
   560  00CE                     l725:
   561                           
   562                           ;main.c: 170:     ADCON1bits.ADFM = 0;
   563  00CE  139F               	bcf	31,7	;volatile
   564  00CF                     l727:
   565                           
   566                           ;main.c: 171:     ADCON0bits.ADON = 1;
   567  00CF  1283               	bcf	3,5	;RP0=0, select bank0
   568  00D0  1303               	bcf	3,6	;RP1=0, select bank0
   569  00D1  141F               	bsf	31,0	;volatile
   570  00D2                     l729:
   571                           
   572                           ;main.c: 173:     TRISCbits.TRISC2 = 1;
   573  00D2  1683               	bsf	3,5	;RP0=1, select bank1
   574  00D3  1303               	bcf	3,6	;RP1=0, select bank1
   575  00D4  1507               	bsf	7,2	;volatile
   576                           
   577                           ;main.c: 174:     CCP1CONbits.P1M = 0;
   578  00D5  303F               	movlw	-193
   579  00D6  1283               	bcf	3,5	;RP0=0, select bank0
   580  00D7  1303               	bcf	3,6	;RP1=0, select bank0
   581  00D8  0597               	andwf	23,f	;volatile
   582                           
   583                           ;main.c: 175:     CCP1CONbits.CCP1M = 0b1100;
   584  00D9  0817               	movf	23,w	;volatile
   585  00DA  39F0               	andlw	-16
   586  00DB  380C               	iorlw	12
   587  00DC  0097               	movwf	23	;volatile
   588                           
   589                           ;main.c: 176:     CCP2CONbits.CCP2M = 0b1111;
   590  00DD  300F               	movlw	15
   591  00DE  049D               	iorwf	29,f	;volatile
   592  00DF                     l731:
   593                           
   594                           ;main.c: 178:     CCPR1L = 0x0F;
   595  00DF  300F               	movlw	15
   596  00E0  0095               	movwf	21	;volatile
   597  00E1                     l733:
   598                           
   599                           ;main.c: 179:     CCP1CONbits.DC1B = 0;
   600  00E1  30CF               	movlw	-49
   601  00E2  0597               	andwf	23,f	;volatile
   602                           
   603                           ;main.c: 180:     CCPR2L = 0x0F;
   604  00E3  300F               	movlw	15
   605  00E4  009B               	movwf	27	;volatile
   606  00E5                     l735:
   607                           
   608                           ;main.c: 182:     PORTC = 0;
   609  00E5  0187               	clrf	7	;volatile
   610  00E6                     l737:
   611                           
   612                           ;main.c: 183:     TRISC = 0xFF;
   613  00E6  30FF               	movlw	255
   614  00E7  1683               	bsf	3,5	;RP0=1, select bank1
   615  00E8  1303               	bcf	3,6	;RP1=0, select bank1
   616  00E9  0087               	movwf	7	;volatile
   617  00EA                     l739:
   618                           
   619                           ;main.c: 184:     PR2 = 250;
   620  00EA  30FA               	movlw	250
   621  00EB  0092               	movwf	18	;volatile
   622  00EC                     l741:
   623                           
   624                           ;main.c: 186:     T2CONbits.T2CKPS = 0b11;
   625  00EC  3003               	movlw	3
   626  00ED  1283               	bcf	3,5	;RP0=0, select bank0
   627  00EE  1303               	bcf	3,6	;RP1=0, select bank0
   628  00EF  0492               	iorwf	18,f	;volatile
   629  00F0                     l743:
   630                           
   631                           ;main.c: 187:     T2CONbits.TMR2ON = 1;
   632  00F0  1512               	bsf	18,2	;volatile
   633  00F1                     l745:
   634                           
   635                           ;main.c: 188:     PIR1bits.TMR2IF = 0;
   636  00F1  108C               	bcf	12,1	;volatile
   637  00F2                     l97:	
   638                           ;main.c: 190:     while(PIR1bits.TMR2IF == 0);
   639                           
   640  00F2  1C8C               	btfss	12,1	;volatile
   641  00F3  28F5               	goto	u11
   642  00F4  28F6               	goto	u10
   643  00F5                     u11:
   644  00F5  28F2               	goto	l97
   645  00F6                     u10:
   646  00F6                     l99:
   647                           
   648                           ;main.c: 191:         PIR1bits.TMR2IF = 0;
   649  00F6  108C               	bcf	12,1	;volatile
   650  00F7                     l747:
   651                           
   652                           ;main.c: 192:         TRISC = 0;
   653  00F7  1683               	bsf	3,5	;RP0=1, select bank1
   654  00F8  1303               	bcf	3,6	;RP1=0, select bank1
   655  00F9  0187               	clrf	7	;volatile
   656  00FA                     l749:
   657                           
   658                           ;main.c: 194:     TRISCbits.TRISC2 = 0;
   659  00FA  1107               	bcf	7,2	;volatile
   660  00FB                     l751:
   661                           
   662                           ;main.c: 197:     OPTION_REGbits.T0CS = 0;
   663  00FB  1281               	bcf	1,5	;volatile
   664  00FC                     l753:
   665                           
   666                           ;main.c: 198:     OPTION_REGbits.T0SE = 0;
   667  00FC  1201               	bcf	1,4	;volatile
   668  00FD                     l755:
   669                           
   670                           ;main.c: 199:     OPTION_REGbits.PS2 = 1;
   671  00FD  1501               	bsf	1,2	;volatile
   672  00FE                     l757:
   673                           
   674                           ;main.c: 200:     OPTION_REGbits.PS1 = 1;
   675  00FE  1481               	bsf	1,1	;volatile
   676  00FF                     l759:
   677                           
   678                           ;main.c: 201:     OPTION_REGbits.PS0 = 1;
   679  00FF  1401               	bsf	1,0	;volatile
   680  0100                     l761:
   681                           
   682                           ;main.c: 204:     INTCONbits.GIE = 1;
   683  0100  178B               	bsf	11,7	;volatile
   684  0101                     l763:
   685                           
   686                           ;main.c: 205:     INTCONbits.PEIE = 1;
   687  0101  170B               	bsf	11,6	;volatile
   688  0102                     l765:
   689                           
   690                           ;main.c: 207:     PIE1bits.ADIE = 1;
   691  0102  170C               	bsf	12,6	;volatile
   692  0103                     l767:
   693                           
   694                           ;main.c: 208:     PIR1bits.ADIF = 0;
   695  0103  1283               	bcf	3,5	;RP0=0, select bank0
   696  0104  1303               	bcf	3,6	;RP1=0, select bank0
   697  0105  130C               	bcf	12,6	;volatile
   698  0106                     l769:
   699                           
   700                           ;main.c: 210:     INTCONbits.T0IF = 0;
   701  0106  110B               	bcf	11,2	;volatile
   702  0107                     l771:
   703                           
   704                           ;main.c: 211:     INTCONbits.T0IE = 1;
   705  0107  168B               	bsf	11,5	;volatile
   706  0108                     l100:
   707  0108  0008               	return
   708  0109                     __end_of_setup:
   709                           
   710                           	psect	text2
   711  0151                     __ptext2:	
   712 ;; *************** function _reset_TMR0 *****************
   713 ;; Defined at:
   714 ;;		line 216 in file "main.c"
   715 ;; Parameters:    Size  Location     Type
   716 ;;		None
   717 ;; Auto vars:     Size  Location     Type
   718 ;;		None
   719 ;; Return value:  Size  Location     Type
   720 ;;                  1    wreg      void 
   721 ;; Registers used:
   722 ;;		status,2
   723 ;; Tracked objects:
   724 ;;		On entry : 0/0
   725 ;;		On exit  : 0/0
   726 ;;		Unchanged: 0/0
   727 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   728 ;;      Params:         0       0       0       0       0
   729 ;;      Locals:         0       0       0       0       0
   730 ;;      Temps:          0       0       0       0       0
   731 ;;      Totals:         0       0       0       0       0
   732 ;;Total ram usage:        0 bytes
   733 ;; Hardware stack levels used: 1
   734 ;; Hardware stack levels required when called: 2
   735 ;; This function calls:
   736 ;;		Nothing
   737 ;; This function is called by:
   738 ;;		_main
   739 ;; This function uses a non-reentrant model
   740 ;;
   741                           
   742  0151                     _reset_TMR0:	
   743                           ;psect for function _reset_TMR0
   744                           
   745  0151                     l695:	
   746                           ;incstack = 0
   747                           ; Regs used in _reset_TMR0: [status,2]
   748                           
   749                           
   750                           ;main.c: 218:     TMR0 = 0;
   751  0151  1283               	bcf	3,5	;RP0=0, select bank0
   752  0152  1303               	bcf	3,6	;RP1=0, select bank0
   753  0153  0181               	clrf	1	;volatile
   754  0154                     l697:
   755                           
   756                           ;main.c: 219:     INTCONbits.T0IF = 0;
   757  0154  110B               	bcf	11,2	;volatile
   758  0155                     l103:
   759  0155  0008               	return
   760  0156                     __end_of_reset_TMR0:
   761                           
   762                           	psect	text3
   763  0015                     __ptext3:	
   764 ;; *************** function _isr *****************
   765 ;; Defined at:
   766 ;;		line 66 in file "main.c"
   767 ;; Parameters:    Size  Location     Type
   768 ;;		None
   769 ;; Auto vars:     Size  Location     Type
   770 ;;		None
   771 ;; Return value:  Size  Location     Type
   772 ;;                  1    wreg      void 
   773 ;; Registers used:
   774 ;;		wreg, status,2, status,0, pclath, cstack
   775 ;; Tracked objects:
   776 ;;		On entry : 0/0
   777 ;;		On exit  : 0/0
   778 ;;		Unchanged: 0/0
   779 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   780 ;;      Params:         0       0       0       0       0
   781 ;;      Locals:         0       0       0       0       0
   782 ;;      Temps:          4       0       0       0       0
   783 ;;      Totals:         4       0       0       0       0
   784 ;;Total ram usage:        4 bytes
   785 ;; Hardware stack levels used: 1
   786 ;; Hardware stack levels required when called: 1
   787 ;; This function calls:
   788 ;;		i1_reset_TMR0
   789 ;; This function is called by:
   790 ;;		Interrupt level 1
   791 ;; This function uses a non-reentrant model
   792 ;;
   793                           
   794  0015                     _isr:	
   795                           ;psect for function _isr
   796                           
   797  0015                     i1l781:
   798                           
   799                           ;main.c: 68:     if (PIR1bits.ADIF)
   800  0015  1283               	bcf	3,5	;RP0=0, select bank0
   801  0016  1303               	bcf	3,6	;RP1=0, select bank0
   802  0017  1F0C               	btfss	12,6	;volatile
   803  0018  281A               	goto	u2_21
   804  0019  281B               	goto	u2_20
   805  001A                     u2_21:
   806  001A  2883               	goto	i1l797
   807  001B                     u2_20:
   808  001B                     i1l783:
   809                           
   810                           ;main.c: 69:     {;main.c: 70:         if (ADCON0bits.CHS == 0b0000)
   811  001B  0C1F               	rrf	31,w	;volatile
   812  001C  00F0               	movwf	??_isr
   813  001D  0C70               	rrf	??_isr,w
   814  001E  390F               	andlw	15
   815  001F  3A00               	xorlw	0
   816  0020  1D03               	skipz
   817  0021  2823               	goto	u3_21
   818  0022  2824               	goto	u3_20
   819  0023                     u3_21:
   820  0023  2848               	goto	i1l787
   821  0024                     u3_20:
   822  0024                     i1l785:
   823                           
   824                           ;main.c: 71:         {;main.c: 72:             CCPR1L = (ADRESH>>1)+123;
   825  0024  081E               	movf	30,w	;volatile
   826  0025  00F0               	movwf	??_isr
   827  0026  1003               	clrc
   828  0027  0C70               	rrf	??_isr,w
   829  0028  3E7B               	addlw	123
   830  0029  0095               	movwf	21	;volatile
   831                           
   832                           ;main.c: 73:             CCP1CONbits.DC1B = (ADRESH & 0b01);
   833  002A  081E               	movf	30,w	;volatile
   834  002B  3901               	andlw	1
   835  002C  00F0               	movwf	??_isr
   836  002D  0EF0               	swapf	??_isr,f
   837  002E  0817               	movf	23,w	;volatile
   838  002F  0670               	xorwf	??_isr,w
   839  0030  39CF               	andlw	-49
   840  0031  0670               	xorwf	??_isr,w
   841  0032  0097               	movwf	23	;volatile
   842                           
   843                           ;main.c: 74:             CCP1CONbits.DC1B0 = (ADRESL>>7);
   844  0033  1683               	bsf	3,5	;RP0=1, select bank1
   845  0034  1303               	bcf	3,6	;RP1=0, select bank1
   846  0035  081E               	movf	30,w	;volatile
   847  0036  00F0               	movwf	??_isr
   848  0037  3007               	movlw	7
   849  0038                     u4_25:
   850  0038  1003               	clrc
   851  0039  0CF0               	rrf	??_isr,f
   852  003A  3EFF               	addlw	-1
   853  003B  1D03               	skipz
   854  003C  2838               	goto	u4_25
   855  003D  0870               	movf	??_isr,w
   856  003E  00F1               	movwf	??_isr+1
   857  003F  0EF1               	swapf	??_isr+1,f
   858  0040  1283               	bcf	3,5	;RP0=0, select bank0
   859  0041  1303               	bcf	3,6	;RP1=0, select bank0
   860  0042  0817               	movf	23,w	;volatile
   861  0043  0671               	xorwf	??_isr+1,w
   862  0044  39EF               	andlw	-17
   863  0045  0671               	xorwf	??_isr+1,w
   864  0046  0097               	movwf	23	;volatile
   865                           
   866                           ;main.c: 75:         }
   867  0047  2882               	goto	i1l795
   868  0048                     i1l787:
   869  0048  0C1F               	rrf	31,w	;volatile
   870  0049  00F0               	movwf	??_isr
   871  004A  0C70               	rrf	??_isr,w
   872  004B  390F               	andlw	15
   873  004C  3A01               	xorlw	1
   874  004D  1D03               	skipz
   875  004E  2850               	goto	u5_21
   876  004F  2851               	goto	u5_20
   877  0050                     u5_21:
   878  0050  2875               	goto	i1l791
   879  0051                     u5_20:
   880  0051                     i1l789:
   881                           
   882                           ;main.c: 78:         {;main.c: 79:             CCPR2L = (ADRESH>>1)+123;
   883  0051  081E               	movf	30,w	;volatile
   884  0052  00F0               	movwf	??_isr
   885  0053  1003               	clrc
   886  0054  0C70               	rrf	??_isr,w
   887  0055  3E7B               	addlw	123
   888  0056  009B               	movwf	27	;volatile
   889                           
   890                           ;main.c: 80:             CCP1CONbits.DC1B = (ADRESH & 0b01);
   891  0057  081E               	movf	30,w	;volatile
   892  0058  3901               	andlw	1
   893  0059  00F0               	movwf	??_isr
   894  005A  0EF0               	swapf	??_isr,f
   895  005B  0817               	movf	23,w	;volatile
   896  005C  0670               	xorwf	??_isr,w
   897  005D  39CF               	andlw	-49
   898  005E  0670               	xorwf	??_isr,w
   899  005F  0097               	movwf	23	;volatile
   900                           
   901                           ;main.c: 81:             CCP1CONbits.DC1B0 = (ADRESL>>7);
   902  0060  1683               	bsf	3,5	;RP0=1, select bank1
   903  0061  1303               	bcf	3,6	;RP1=0, select bank1
   904  0062  081E               	movf	30,w	;volatile
   905  0063  00F0               	movwf	??_isr
   906  0064  3007               	movlw	7
   907  0065                     u6_25:
   908  0065  1003               	clrc
   909  0066  0CF0               	rrf	??_isr,f
   910  0067  3EFF               	addlw	-1
   911  0068  1D03               	skipz
   912  0069  2865               	goto	u6_25
   913  006A  0870               	movf	??_isr,w
   914  006B  00F1               	movwf	??_isr+1
   915  006C  0EF1               	swapf	??_isr+1,f
   916  006D  1283               	bcf	3,5	;RP0=0, select bank0
   917  006E  1303               	bcf	3,6	;RP1=0, select bank0
   918  006F  0817               	movf	23,w	;volatile
   919  0070  0671               	xorwf	??_isr+1,w
   920  0071  39EF               	andlw	-17
   921  0072  0671               	xorwf	??_isr+1,w
   922  0073  0097               	movwf	23	;volatile
   923                           
   924                           ;main.c: 82:         }
   925  0074  2882               	goto	i1l795
   926  0075                     i1l791:
   927  0075  0C1F               	rrf	31,w	;volatile
   928  0076  00F0               	movwf	??_isr
   929  0077  0C70               	rrf	??_isr,w
   930  0078  390F               	andlw	15
   931  0079  3A02               	xorlw	2
   932  007A  1D03               	skipz
   933  007B  287D               	goto	u7_21
   934  007C  287E               	goto	u7_20
   935  007D                     u7_21:
   936  007D  2882               	goto	i1l795
   937  007E                     u7_20:
   938  007E                     i1l793:
   939                           
   940                           ;main.c: 85:         {;main.c: 86:             conversion = ADRESH;
   941  007E  081E               	movf	30,w	;volatile
   942  007F  00F0               	movwf	??_isr
   943  0080  0870               	movf	??_isr,w
   944  0081  00F6               	movwf	_conversion
   945  0082                     i1l795:
   946                           
   947                           ;main.c: 89:         PIR1bits.ADIF = 0;
   948  0082  130C               	bcf	12,6	;volatile
   949  0083                     i1l797:
   950                           
   951                           ;main.c: 92:     if (INTCONbits.T0IF)
   952  0083  1D0B               	btfss	11,2	;volatile
   953  0084  2886               	goto	u8_21
   954  0085  2887               	goto	u8_20
   955  0086                     u8_21:
   956  0086  28A2               	goto	i1l80
   957  0087                     u8_20:
   958  0087                     i1l799:
   959                           
   960                           ;main.c: 93:     {;main.c: 94:         reset_TMR0();
   961  0087  120A  118A  2156  120A  118A  	fcall	i1_reset_TMR0
   962  008C                     i1l801:
   963                           
   964                           ;main.c: 95:         counter++;
   965  008C  3001               	movlw	1
   966  008D  00F0               	movwf	??_isr
   967  008E  0870               	movf	??_isr,w
   968  008F  07F5               	addwf	_counter,f
   969  0090                     i1l803:
   970                           
   971                           ;main.c: 96:         PORTB = counter;
   972  0090  0875               	movf	_counter,w
   973  0091  1283               	bcf	3,5	;RP0=0, select bank0
   974  0092  1303               	bcf	3,6	;RP1=0, select bank0
   975  0093  0086               	movwf	6	;volatile
   976  0094                     i1l805:
   977                           
   978                           ;main.c: 98:         if (counter == 0)
   979  0094  0875               	movf	_counter,w
   980  0095  1D03               	btfss	3,2
   981  0096  2898               	goto	u9_21
   982  0097  2899               	goto	u9_20
   983  0098                     u9_21:
   984  0098  289A               	goto	i1l809
   985  0099                     u9_20:
   986  0099                     i1l807:
   987                           
   988                           ;main.c: 99:         {;main.c: 100:             PORTDbits.RD0 = 1;
   989  0099  1408               	bsf	8,0	;volatile
   990  009A                     i1l809:
   991                           
   992                           ;main.c: 103:         if (counter == conversion)
   993  009A  0875               	movf	_counter,w
   994  009B  0676               	xorwf	_conversion,w
   995  009C  1D03               	skipz
   996  009D  289F               	goto	u10_21
   997  009E  28A0               	goto	u10_20
   998  009F                     u10_21:
   999  009F  28A1               	goto	i1l79
  1000  00A0                     u10_20:
  1001  00A0                     i1l811:
  1002                           
  1003                           ;main.c: 104:         {;main.c: 105:             PORTDbits.RD0 = 0;
  1004  00A0  1008               	bcf	8,0	;volatile
  1005  00A1                     i1l79:	
  1006                           ;main.c: 106:         }
  1007                           
  1008                           
  1009                           ;main.c: 108:         INTCONbits.T0IF = 0;
  1010  00A1  110B               	bcf	11,2	;volatile
  1011  00A2                     i1l80:
  1012  00A2  0873               	movf	??_isr+3,w
  1013  00A3  008A               	movwf	10
  1014  00A4  0E72               	swapf	??_isr+2,w
  1015  00A5  0083               	movwf	3
  1016  00A6  0EFE               	swapf	btemp,f
  1017  00A7  0E7E               	swapf	btemp,w
  1018  00A8  0009               	retfie
  1019  00A9                     __end_of_isr:
  1020                           
  1021                           	psect	intentry
  1022  0004                     __pintentry:	
  1023                           ;incstack = 0
  1024                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
  1025                           
  1026  0004                     interrupt_function:
  1027  007E                     saved_w	set	btemp
  1028  0004  00FE               	movwf	btemp
  1029  0005  0E03               	swapf	3,w
  1030  0006  00F2               	movwf	??_isr+2
  1031  0007  080A               	movf	10,w
  1032  0008  00F3               	movwf	??_isr+3
  1033  0009  120A  118A  2815   	ljmp	_isr
  1034                           
  1035                           	psect	text4
  1036  0156                     __ptext4:	
  1037 ;; *************** function i1_reset_TMR0 *****************
  1038 ;; Defined at:
  1039 ;;		line 216 in file "main.c"
  1040 ;; Parameters:    Size  Location     Type
  1041 ;;		None
  1042 ;; Auto vars:     Size  Location     Type
  1043 ;;		None
  1044 ;; Return value:  Size  Location     Type
  1045 ;;                  1    wreg      void 
  1046 ;; Registers used:
  1047 ;;		status,2
  1048 ;; Tracked objects:
  1049 ;;		On entry : 0/0
  1050 ;;		On exit  : 0/0
  1051 ;;		Unchanged: 0/0
  1052 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1053 ;;      Params:         0       0       0       0       0
  1054 ;;      Locals:         0       0       0       0       0
  1055 ;;      Temps:          0       0       0       0       0
  1056 ;;      Totals:         0       0       0       0       0
  1057 ;;Total ram usage:        0 bytes
  1058 ;; Hardware stack levels used: 1
  1059 ;; This function calls:
  1060 ;;		Nothing
  1061 ;; This function is called by:
  1062 ;;		_isr
  1063 ;; This function uses a non-reentrant model
  1064 ;;
  1065                           
  1066  0156                     i1_reset_TMR0:	
  1067                           ;psect for function i1_reset_TMR0
  1068                           
  1069  0156                     i1l775:	
  1070                           ;incstack = 0
  1071                           ; Regs used in i1_reset_TMR0: [status,2]
  1072                           
  1073                           
  1074                           ;main.c: 218:     TMR0 = 0;
  1075  0156  1283               	bcf	3,5	;RP0=0, select bank0
  1076  0157  1303               	bcf	3,6	;RP1=0, select bank0
  1077  0158  0181               	clrf	1	;volatile
  1078  0159                     i1l777:
  1079                           
  1080                           ;main.c: 219:     INTCONbits.T0IF = 0;
  1081  0159  110B               	bcf	11,2	;volatile
  1082  015A                     i1l103:
  1083  015A  0008               	return
  1084  015B                     __end_ofi1_reset_TMR0:
  1085  007E                     btemp	set	126	;btemp
  1086  007E                     wtemp0	set	126
  1087                           
  1088                           	psect	idloc
  1089                           
  1090                           ;Config register IDLOC0 @ 0x2000
  1091                           ;	unspecified, using default values
  1092  2000                     	org	8192
  1093  2000  3FFF               	dw	16383
  1094                           
  1095                           ;Config register IDLOC1 @ 0x2001
  1096                           ;	unspecified, using default values
  1097  2001                     	org	8193
  1098  2001  3FFF               	dw	16383
  1099                           
  1100                           ;Config register IDLOC2 @ 0x2002
  1101                           ;	unspecified, using default values
  1102  2002                     	org	8194
  1103  2002  3FFF               	dw	16383
  1104                           
  1105                           ;Config register IDLOC3 @ 0x2003
  1106                           ;	unspecified, using default values
  1107  2003                     	org	8195
  1108  2003  3FFF               	dw	16383
  1109                           
  1110                           	psect	config
  1111                           
  1112                           ;Config register CONFIG1 @ 0x2007
  1113                           ;	Oscillator Selection bits
  1114                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1115                           ;	Watchdog Timer Enable bit
  1116                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1117                           ;	Power-up Timer Enable bit
  1118                           ;	PWRTE = OFF, PWRT disabled
  1119                           ;	RE3/MCLR pin function select bit
  1120                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1121                           ;	Code Protection bit
  1122                           ;	CP = OFF, Program memory code protection is disabled
  1123                           ;	Data Code Protection bit
  1124                           ;	CPD = OFF, Data memory code protection is disabled
  1125                           ;	Brown Out Reset Selection bits
  1126                           ;	BOREN = OFF, BOR disabled
  1127                           ;	Internal External Switchover bit
  1128                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1129                           ;	Fail-Safe Clock Monitor Enabled bit
  1130                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1131                           ;	Low Voltage Programming Enable bit
  1132                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1133                           ;	In-Circuit Debugger Mode bit
  1134                           ;	DEBUG = 0x1, unprogrammed default
  1135  2007                     	org	8199
  1136  2007  20D4               	dw	8404
  1137                           
  1138                           ;Config register CONFIG2 @ 0x2008
  1139                           ;	Brown-out Reset Selection bit
  1140                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1141                           ;	Flash Program Memory Self Write Enable bits
  1142                           ;	WRT = OFF, Write protection off
  1143  2008                     	org	8200
  1144  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5       7
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0       0
                                              4 COMMON     1     1      0
                         _reset_TMR0
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _reset_TMR0                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _isr                                                  4     4      0       0
                                              0 COMMON     4     4      0
                       i1_reset_TMR0
 ---------------------------------------------------------------------------------
 (3) i1_reset_TMR0                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _reset_TMR0
   _setup

 _isr (ROOT)
   i1_reset_TMR0

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      5       7       1       50.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       7       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       7      12        0.0%


Microchip Technology PIC Macro Assembler V2.35 build 20211206165544 
Symbol Table                                                                                   Sat Apr 30 08:53:55 2022

                     l97 00F2                       l99 00F6                       u10 00F6  
                     u11 00F5                      l100 0108                      l103 0155  
                    l701 00A9                      l711 00B5                      l703 00AD  
                    l721 00CA                      l713 00B8                      l705 00AE  
                    l731 00DF                      l723 00CD                      l715 00BB  
                    l707 00B2                      l741 00EC                      l733 00E1  
                    l725 00CE                      l717 00BE                      l709 00B3  
                    l821 0127                      l813 0109                      l751 00FB  
                    l743 00F0                      l735 00E5                      l727 00CF  
                    l719 00C1                      l831 0145                      l823 012C  
                    l815 010E                      l761 0100                      l753 00FC  
                    l745 00F1                      l737 00E6                      l729 00D2  
                    l833 014A                      l825 0135                      l817 0118  
                    l771 0107                      l763 0101                      l755 00FD  
                    l747 00F7                      l739 00EA                      l827 013A  
                    l819 011E                      l765 0102                      l757 00FE  
                    l749 00FA                      l829 0143                      l695 0151  
                    l767 0103                      l759 00FF                      l697 0154  
                    l769 0106                      u110 011E                      u111 011D  
                    u120 0127                      u121 0126                      u130 0135  
                    u131 0134                      u140 0143                      u141 0142  
                    u157 0115                      _PR2 0092                      u167 0147  
                    _isr 0015                     ?_isr 0070                     i1l80 00A2  
                   i1l79 00A1                     _TMR0 0001                     u2_20 001B  
                   u2_21 001A                     u3_20 0024                     u3_21 0023  
                   u4_25 0038                     u5_20 0051                     u5_21 0050  
                   u6_25 0065                     u7_20 007E                     u7_21 007D  
                   u8_20 0087                     u8_21 0086                     u9_20 0099  
                   u9_21 0098                     _main 0109                     btemp 007E  
                   start 000C                    ??_isr 0070                    ?_main 0070  
                  _ANSEL 0188                    i1l103 015A                    i1l801 008C  
                  i1l811 00A0                    i1l803 0090                    i1l805 0094  
                  i1l807 0099                    i1l809 009A                    i1l781 0015  
                  i1l775 0156                    i1l791 0075                    i1l783 001B  
                  i1l777 0159                    i1l793 007E                    i1l785 0024  
                  i1l795 0082                    i1l787 0048                    i1l789 0051  
                  i1l797 0083                    i1l799 0087                    u10_20 00A0  
                  u10_21 009F                    _PORTA 0005                    _PORTB 0006  
                  _PORTC 0007                    _PORTD 0008                    _TRISA 0085  
                  _TRISB 0086                    _TRISC 0087                    _TRISD 0088  
                  _setup 00A9                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 000F             __end_of_main 0151  
                 ??_main 0074                   _ADRESH 001E                   _ADRESL 009E  
                 _CCPR1L 0015                   _CCPR2L 001B                   ?_setup 0070  
                 _ANSELH 0189             i1_reset_TMR0 0156                   saved_w 007E  
__end_of__initialization 0011           __pcstackCOMMON 0070            __end_of_setup 0109  
         _OPTION_REGbits 0081                  ??_setup 0074               __pmaintext 0109  
             __pintentry 0004               _conversion 0076                  __ptext1 00A9  
                __ptext2 0151                  __ptext3 0015                  __ptext4 0156  
                _counter 0075                _T2CONbits 0012     end_of_initialization 0011  
             _reset_TMR0 0151                _PORTDbits 0008                _TRISCbits 0087  
            _CCP1CONbits 0017              _CCP2CONbits 001D      start_initialization 000F  
            __end_of_isr 00A9              ?_reset_TMR0 0070              __pbssCOMMON 0075  
              ___latbits 0002        interrupt_function 0004                 _PIE1bits 008C  
               _PIR1bits 000C               _ADCON0bits 001F               _ADCON1bits 009F  
          ?i1_reset_TMR0 0070           ??i1_reset_TMR0 0070             ??_reset_TMR0 0074  
             _INTCONbits 000B       __end_of_reset_TMR0 0156                 intlevel1 0000  
             _OSCCONbits 008F     __end_ofi1_reset_TMR0 015B  
